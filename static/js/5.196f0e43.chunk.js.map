{"version":3,"sources":["components/apod/apod.module.css","../node_modules/classnames/index.js","components/apod/datePickers/setDateAPOD.jsx","components/apod/datePickers/setIntervalAPOD.jsx","components/apod/apod.jsx"],"names":["module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","default","SetDateAPOD","dispatch","useDispatch","validationSchema","yup","shape","currentDate","required","initialValues","validateOnBlur","onSubmit","values","resetForm","setCurrentDate","errors","touched","handleChange","handleBlur","handleSubmit","isValid","dirty","type","name","onChange","onBlur","value","disabled","onClick","SetIntervalAPOD","startDate","endDate","setIntervalDates","Apod","apodArray","useSelector","state","apod","intervalDateStart","intervalDateEnd","searchStart","library","useState","datePickerType","setDatePickerType","useEffect","getApod","getApodWithInterval","to","className","s","title","map","a","cn","apodItem","apodMany","apodTitle","apodImageHolder","apodImage","src","url","alt","apodDate","date","apodExpTitle","apodExplanation","explanation"],"mappings":"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","file":"static/js/5.196f0e43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"apod\":\"apod_apod__1OKpy\",\"apodItem\":\"apod_apodItem__1ntIb\",\"apodMany\":\"apod_apodMany__36FdB\",\"title\":\"apod_title__1YvME\",\"image\":\"apod_image__6EbVP\",\"apodTitle\":\"apod_apodTitle__14pMd\",\"apodImageHolder\":\"apod_apodImageHolder__3KoQw\",\"apodImage\":\"apod_apodImage__3mIOQ\",\"apodDate\":\"apod_apodDate__dJe0Q\",\"apodExpTitle\":\"apod_apodExpTitle__2RnRp\",\"apodExplanation\":\"apod_apodExplanation__1_wg8\"};","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCurrentDate} from \"../../../reducers/apod\";\r\n\r\nconst SetDateAPOD = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        currentDate: yup.string().required(`Field is required`)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    currentDate: ``\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values, {resetForm}) => {\r\n                    dispatch(setCurrentDate(values.currentDate))\r\n                    resetForm({values: ``})\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, handleSubmit, isValid, dirty})=>(\r\n                    <div>\r\n                        <h3>Choose exact date</h3>\r\n                        {touched.currentDate && errors.currentDate &&\r\n                        <div>{errors.currentDate}</div>}\r\n                        <input type=\"date\"\r\n                               name='currentDate'\r\n                               onChange={handleChange}\r\n                               onBlur={handleBlur}\r\n                               value={values.currentDate}\r\n                        />\r\n                        <button disabled={!isValid && !dirty}\r\n                                onClick={handleSubmit}\r\n                                type={`submit`}>\r\n                            Show</button>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetDateAPOD","import React from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setIntervalDates} from \"../../../reducers/apod\";\r\n\r\nconst SetIntervalAPOD = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        startDate: yup.string().required(`Field is required`),\r\n        endDate: yup.string().required(`Field is required`),\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    startDate: ``,\r\n                    endDate: ``,\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values, {resetForm}) => {\r\n                    dispatch(setIntervalDates(values.startDate, values.endDate))\r\n                    resetForm({values: ``})\r\n                }}\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({values, errors, touched, handleSubmit, handleBlur, handleChange, isValid, dirty}) => (\r\n                    <div>\r\n                        <h3>Choose interval</h3>\r\n                        <div>\r\n                            {touched.startDate && errors.startDate &&\r\n                            <div>{errors.startDate}</div>}\r\n                            <input type=\"date\"\r\n                                   name='startDate'\r\n                                   onChange={handleChange}\r\n                                   onBlur={handleBlur}\r\n                                   value={values.startDate}/>\r\n                        </div>\r\n                        <div>\r\n                            {touched.endDate && errors.endDate &&\r\n                            <div>{errors.endDate}</div>}\r\n                            <input type=\"date\"\r\n                                   name='endDate'\r\n                                   onChange={handleChange}\r\n                                   onBlur={handleBlur}\r\n                                   value={values.endDate}/>\r\n                        </div>\r\n                        <button disabled={!isValid && !dirty}\r\n                                onClick={handleSubmit}\r\n                                type={'submit'}>\r\n                            Show</button>\r\n\r\n                    </div>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetIntervalAPOD","import React, {useEffect, useState} from \"react\";\r\nimport s from './apod.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getApod, getApodWithInterval} from \"../../reducers/apod\";\r\nimport Preloader from \"../../helpers/preloaders/preloader\";\r\nimport SetDateAPOD from \"./datePickers/setDateAPOD\";\r\nimport SetIntervalAPOD from \"./datePickers/setIntervalAPOD\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport cn from 'classnames'\r\n\r\nconst Apod = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const apodArray = useSelector(state => state.apod.apodArray)\r\n    const currentDate = useSelector(state => state.apod.currentDate)\r\n    const intervalDateStart = useSelector(state => state.apod.intervalDateStart)\r\n    const intervalDateEnd = useSelector(state => state.apod.intervalDateEnd)\r\n    const searchStart = useSelector(state => state.library.searchStart)\r\n\r\n    const [datePickerType, setDatePickerType] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        if(datePickerType === 0){\r\n            dispatch(getApod(currentDate))\r\n        }\r\n    },[dispatch, datePickerType, currentDate])\r\n\r\n    useEffect(()=>{\r\n        if(datePickerType === 1){\r\n            dispatch(getApodWithInterval(intervalDateStart,intervalDateEnd))\r\n        }\r\n    },[dispatch, datePickerType, intervalDateStart, intervalDateEnd])\r\n\r\n\r\n\r\n    if(apodArray.length === 0) return <Preloader />\r\n\r\n    if(searchStart) return <Redirect to='/nasaLibrary'/>\r\n\r\n    return (\r\n        <div className={s.apod}>\r\n           <h2 className={s.title}>A picture of the day</h2>\r\n            {datePickerType === 0 &&\r\n            <div>\r\n                <SetDateAPOD />\r\n                <button onClick={ () => {setDatePickerType(1)} }>Choose interval</button>\r\n            </div>}\r\n\r\n            {datePickerType === 1 &&\r\n            <div>\r\n                <SetIntervalAPOD />\r\n                <button onClick={ () => {setDatePickerType(0)} }>Choose exact date</button>\r\n            </div>}\r\n\r\n            <div>\r\n                {\r\n                    apodArray.map(a => <div className={cn(s.apodItem, apodArray.length >1 && s.apodMany)} key={a.date}>\r\n                        <h3 className={s.apodTitle}>{a.title}</h3>\r\n                        <div className={s.apodImageHolder}>\r\n                            <img className={s.apodImage} src={a.url} alt=\"Not available\"/>\r\n                        </div>\r\n                        <p className={s.apodDate}>Date: {a.date}</p>\r\n                        <p className={s.apodExpTitle}>Explanation</p>\r\n                        <p className={s.apodExplanation}>{a.explanation}</p>\r\n\r\n\r\n                    </div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Apod"],"sourceRoot":""}