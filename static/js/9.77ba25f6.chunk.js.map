{"version":3,"sources":["helpers/commonStyles/commonStyles.module.css","helpers/formHelpers/formsStylesMedia.module.css","helpers/modalWindow/modalWindow.jsx","helpers/modalWindow/modalWindow.module.css","images/imagePlaceholder.jpg","components/earthObs/earthObs.module.css","components/earthObs/earthObsMedia.module.css","components/earthObs/paramsPickerEarthOBS/paramsPickerEarthObs.jsx","components/earthObs/earthObsItem/earthObsItem.jsx","components/earthObs/earthObs.jsx"],"names":["module","exports","ModalWindow","active","setActive","children","className","cn","s","modalBody","activeBody","onClick","modalContent","e","stopPropagation","ParamsPickerEarthObs","setParams","dispatch","useDispatch","validationSchema","yup","shape","longitude","required","typeError","min","max","latitude","initialValues","validateOnBlur","onSubmit","values","setParameters","date","dimensions","setNewError","errors","touched","handleSubmit","handleChange","handleBlur","isValid","dirty","form","m","title","inputsHolder","formInputHelper","formSubtitle","input","formButtonHelper","formButton","EarthObsItem","item","useState","modalWindow","setModalWindow","modalSrc","setModalSrc","result","earthParams","id","imageHolder","image","src","url","alt","currentTarget","onError","target","imagePlaceHolder","common","modalImage","EarthObs","earthObs","useSelector","state","earth","earthObservation","searchStart","library","error","params","useEffect","getEarthObservation","to","formOpenButton","errorCase"],"mappings":"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","file":"static/js/9.77ba25f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"commonStyles_title__1Do2M\",\"modalImage\":\"commonStyles_modalImage__2f9nz\",\"video\":\"commonStyles_video__NSDi7\",\"errorCase\":\"commonStyles_errorCase__jOkXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formsStylesMedia_form__1C2i4\"};","import React from \"react\";\r\nimport s from \"./modalWindow.module.css\"\r\nimport cn from 'classnames'\r\n\r\nconst ModalWindow = ({active, setActive, children}) => {\r\n    return (\r\n        <div className={cn(s.modalBody, active && s.activeBody)}\r\n             onClick={ () => { setActive(false) } }>\r\n            <div className={s.modalContent}\r\n                 onClick={ (e) => {e.stopPropagation()} }>\r\n                {children}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalWindow","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBody\":\"modalWindow_modalBody__37t9c\"};","export default __webpack_public_path__ + \"static/media/imagePlaceholder.d121e487.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"earth\":\"earthObs_earth__3uESM\",\"imageHolder\":\"earthObs_imageHolder__1AOXR\",\"image\":\"earthObs_image__2iaZb\",\"earthParams\":\"earthObs_earthParams__XzJ_r\",\"result\":\"earthObs_result__2swlr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"earthObsMedia_result__2QPYn\"};","import React from \"react\";\r\nimport s from '../../../helpers/formHelpers/formsStyles.module.css'\r\nimport m from '../../../helpers/formHelpers/formsStylesMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setParameters} from \"../../../reducers/earthObs\";\r\nimport {formButtonHelper,formInputHelper} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {setNewError} from \"../../../reducers/errors\";\r\n\r\nconst ParamsPickerEarthObs = ({setParams}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        longitude: yup\r\n            .number()\r\n            .required(`Longitude required`)\r\n            .typeError(`Only numbers`)\r\n            .min(-180, `Enter longitude from -180 to 180`)\r\n            .max(180, `Enter longitude from -180 to 180`),\r\n        latitude: yup\r\n            .number()\r\n            .required(`Latitude required`)\r\n            .typeError(`Only numbers`)\r\n            .min(-90, `Enter latitude from -90 to 90`)\r\n            .max(90, `Enter latitude from -90 to 90`),\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    longitude: ``,\r\n                    latitude: ``,\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values) => {\r\n                    dispatch(setParameters(values.longitude, values.latitude,\r\n                        values.date ,values.dimensions))\r\n                    dispatch(setNewError(null))\r\n                    setParams(false)\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({values, errors, touched, handleSubmit, handleChange,\r\n                       handleBlur, isValid, dirty}) => (\r\n                    <form className={cn(s.form, m.form)}>\r\n                        <h3 className={s.title}>Set new parameters</h3>\r\n                        <div className={s.inputsHolder}>\r\n                            {formInputHelper(s.formSubtitle, `Longitude`, touched.longitude,\r\n                                errors.longitude, s.input, `text`, `longitude`, null, null,\r\n                                handleChange, handleBlur, values.longitude, `numeric`, true)}\r\n\r\n                            {formInputHelper(s.formSubtitle, `Latitude`, touched.latitude,\r\n                                errors.latitude, s.input, `text`, `latitude`, null, null,\r\n                                handleChange, handleBlur, values.latitude, `numeric`, false)}\r\n\r\n                        </div>\r\n\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n                    </form>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default ParamsPickerEarthObs","import React, {useState} from \"react\";\r\nimport s from \"../earthObs.module.css\";\r\nimport m from \"../earthObsMedia.module.css\";\r\nimport common from \"../../../helpers/commonStyles/commonStyles.module.css\";\r\nimport cn from \"classnames\";\r\nimport imagePlaceHolder from \"../../../images/imagePlaceholder.jpg\";\r\nimport ModalWindow from \"../../../helpers/modalWindow/modalWindow\";\r\n\r\nconst EarthObsItem = ({item}) => {\r\n\r\n    //State for modal window\r\n    const [modalWindow, setModalWindow] = useState(false)\r\n    const [modalSrc, setModalSrc] = useState(``)\r\n\r\n    return (\r\n        <div>\r\n            {/*Item*/}\r\n            <div className={cn(s.result, m.result)}>\r\n                <p className={s.earthParams}>ID: {item.id}</p>\r\n                <p className={s.earthParams}>Date: {item.date}</p>\r\n                <div className={s.imageHolder}>\r\n                    <img className={s.image}\r\n                         src={item.url}\r\n                         alt=\"earthObs\"\r\n                         onClick={ (e) => {\r\n                             setModalWindow(true)\r\n                             setModalSrc(e.currentTarget.src)\r\n                         }}\r\n                         onError={ (e) => {e.target.src = imagePlaceHolder}}/>\r\n                </div>\r\n            </div>\r\n\r\n            {/*Modal window*/}\r\n            {modalWindow &&\r\n            <ModalWindow active={modalWindow} setActive={setModalWindow}>\r\n                <img className={cn(common.modalImage)}\r\n                     src={modalSrc}\r\n                     alt=\"modal\"/>\r\n            </ModalWindow>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EarthObsItem","import React, {useEffect, useState} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './earthObs.module.css'\r\nimport common from '../../helpers/commonStyles/commonStyles.module.css'\r\nimport form from '../../helpers/formHelpers/formsStyles.module.css'\r\nimport Preloader from \"../../helpers/preloaders/preloader\";\r\nimport ParamsPickerEarthObs from \"./paramsPickerEarthOBS/paramsPickerEarthObs\";\r\nimport EarthObsItem from \"./earthObsItem/earthObsItem\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getEarthObservation} from \"../../reducers/earthObs\";\r\nimport {setNewError} from \"../../reducers/errors\";\r\nimport { GiClick } from 'react-icons/gi';\r\n\r\nconst EarthObs = () => {\r\n\r\n    //State\r\n    const dispatch = useDispatch()\r\n\r\n    const earthObs = useSelector(state => state.earth.earthObservation)\r\n    const longitude = useSelector(state => state.earth.longitude)\r\n    const latitude = useSelector(state => state.earth.latitude)\r\n    const searchStart = useSelector(state => state.library.searchStart)\r\n    const error = useSelector(state => state.errors.error)\r\n\r\n    //Open/close parameters\r\n    const [params, setParams] = useState(false)\r\n    const setParameters = () => {\r\n        params\r\n            ? setParams(false)\r\n            : setParams(true)\r\n    }\r\n\r\n    //Setting items\r\n    useEffect(()=>{\r\n        dispatch(getEarthObservation(longitude, latitude))\r\n    },[dispatch, longitude, latitude])\r\n\r\n    //SearchStart = null when page loads (with this is's possible to go to other links)\r\n    useEffect(()=>{\r\n       dispatch(setNewError(null))\r\n    },[dispatch])\r\n\r\n    //Redirect to nasaLibrary when submit search field if header\r\n    if(searchStart) return <Redirect to='/nasaLibrary'/>\r\n\r\n    return (\r\n        <div className={s.earth}>\r\n            <h2 className={common.title}>NASA Landsat Satellite Imagery Data</h2>\r\n\r\n            {/*Parameters section*/}\r\n            {!params &&\r\n            <button className={form.formOpenButton} onClick={setParameters}><GiClick/> Set parameters</button>}\r\n\r\n            {params && <div>\r\n                <button className={form.formOpenButton} onClick={setParameters}><GiClick/> Close parameters</button>\r\n                <ParamsPickerEarthObs setParams={setParams}/>\r\n            </div>}\r\n\r\n            {/*Error case*/}\r\n            {error && <h3 className={common.errorCase}>Not available, please change parameters</h3>}\r\n\r\n            {/*Preloader*/}\r\n            {!earthObs && !error &&\r\n            <Preloader/>}\r\n\r\n            {/*Result*/}\r\n            {earthObs && !error &&\r\n            <EarthObsItem item={earthObs}/>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EarthObs"],"sourceRoot":""}