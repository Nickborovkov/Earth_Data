{"version":3,"sources":["helpers/formHelpers/formsStylesMedia.module.css","components/earthImage/earthImage.module.css","components/earthImage/earthImageMedia.module.css","components/earthImage/datePicker/setDateEarthImage.jsx","helpers/urlHelper/earthImageURLHelper.js","components/earthImage/earthImage.jsx"],"names":["module","exports","SetDateEarthImage","dispatch","useDispatch","validationSchema","yup","shape","selectedDate","required","initialValues","validateOnBlur","onSubmit","values","setEarthImageDate","touched","errors","handleSubmit","handleBlur","handleChange","isValid","dirty","className","cn","s","form","m","title","inputsHolder","formInputHelper","formSubtitle","input","dateToday","formButtonHelper","formButton","earthImageUrlHelper","date","item","dateArray","split","splitedDate","year","month","EarthImage","earthImage","useSelector","state","SelectedDate","searchStart","library","useEffect","getEarthImage","to","imagesArray","map","e","imagesItem","imageDate","params","centroid_coordinates","lat","lon","imageHolder","image","src","alt","identifier"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,KAAO,iC,oBCAzBD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,YAAc,gCAAgC,MAAQ,0BAA0B,UAAY,8BAA8B,OAAS,2BAA2B,YAAc,gCAAgC,WAAa,iC,oBCAzTD,EAAOC,QAAU,CAAC,WAAa,oCAAoC,MAAQ,iC,yMCgD5DC,EAtCW,WAEtB,IAAMC,EAAWC,cACXC,EAAmBC,MAAaC,MAAM,CACxCC,aAAcF,MAETG,SAFS,mBAKlB,OACI,8BACI,cAAC,IAAD,CACIC,cAAe,CACXF,aAAa,IAEjBG,gBAAc,EACdC,SAAW,SAACC,GACRV,EAASW,YAAkBD,EAAOL,gBAEtCH,iBAAkBA,EARtB,SAUM,gBAAEQ,EAAF,EAAEA,OAAQE,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,aAAcC,EAAzC,EAAyCA,WAAYC,EAArD,EAAqDA,aAAcC,EAAnE,EAAmEA,QAASC,EAA5E,EAA4EA,MAA5E,OACE,uBAAMC,UAAWC,IAAGC,IAAEC,KAAMC,IAAED,MAA9B,UACI,oBAAIH,UAAWE,IAAEG,MAAjB,4BACA,qBAAKL,UAAWE,IAAEI,aAAlB,SACKC,YAAgBL,IAAEM,aAAH,OAAyBf,EAAQP,aAAcQ,EAAOR,aAClEgB,IAAEO,MADU,mCACmCC,IAAWb,EAC1DD,EAAYL,EAAOL,gBAG1ByB,YAAiBT,IAAEU,WAAYd,EAASC,EAAOJ,EAA/B,iBCzC5BkB,EAAsB,SAACC,EAAMC,GACtC,IACMC,EAAYF,EAAKG,MAAL,KACZC,EAAc,CAChBC,KAAMH,EAAU,GAChBI,MAAOJ,EAAU,GACjBF,KAAME,EAAU,IAEpB,MAAM,6CAAN,OAAoDE,EAAYC,KAAhE,YAAwED,EAAYE,MAApF,YAA6FF,EAAYJ,KAAzG,gBAAqHC,EAArH,wBAPY,6C,OCkDDM,UAxCI,WAEf,IAAMxC,EAAWC,cACXwC,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,WAAWA,cACnDG,EAAeF,aAAY,SAAAC,GAAK,OAAIA,EAAMF,WAAWR,QACrDY,EAAcH,aAAY,SAAAC,GAAK,OAAIA,EAAMG,QAAQD,eAQvD,OANAE,qBAAU,WACN/C,EAASgD,YAAcJ,MACxB,CAAC5C,EAAU4C,IAIVH,EAEDI,EAAoB,cAAC,IAAD,CAAUI,GAAG,iBAGhC,sBAAK9B,UAAWE,IAAEoB,WAAlB,UACI,oBAAItB,UAAWC,IAAGC,IAAEG,MAAOD,IAAEC,OAA7B,4CACA,cAAC,EAAD,IACA,qBAAKL,UAAWE,IAAE6B,YAAlB,SAEYT,EAAWU,KAAI,SAAAC,GAAC,OAAI,sBAAwBjC,UAAWC,IAAGC,IAAEgC,WAAY9B,IAAE8B,YAAtD,UAChB,gCACI,qBAAIlC,UAAWE,IAAEiC,UAAjB,mBAAmCF,EAAEnB,QACrC,oBAAGd,UAAWE,IAAEkC,OAAhB,uBAAmCH,EAAEI,qBAAqBC,OAC1D,oBAAGtC,UAAWE,IAAEkC,OAAhB,wBAAoCH,EAAEI,qBAAqBE,UAE/D,qBAAKvC,UAAWE,IAAEsC,YAAlB,SACI,qBAAKxC,UAAWE,IAAEuC,MAAOC,IAAK7B,EAAoBY,EAAcQ,EAAEQ,OAC7DE,IAAI,0CARaV,EAAEW,oBAV7B,cAAC,IAAD","file":"static/js/5.47d503a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formsStylesMedia_form__2kri3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"earthImage\":\"earthImage_earthImage__3Plbt\",\"title\":\"earthImage_title__2XHhF\",\"imageHolder\":\"earthImage_imageHolder__1fnwk\",\"image\":\"earthImage_image__1DvIT\",\"imageDate\":\"earthImage_imageDate__1-Fpm\",\"params\":\"earthImage_params__2WyrP\",\"imagesArray\":\"earthImage_imagesArray__X2fZZ\",\"imagesItem\":\"earthImage_imagesItem__qZ-XI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imagesItem\":\"earthImageMedia_imagesItem__mCVVO\",\"title\":\"earthImageMedia_title__18GrP\"};","import React from \"react\";\r\nimport s from '../../../helpers/formHelpers/formsStyles.module.css'\r\nimport m from '../../../helpers/formHelpers/formsStylesMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as yup from 'yup'\r\nimport {Formik} from \"formik\";\r\nimport {setEarthImageDate} from \"../../../reducers/earthImage\";\r\nimport {formButtonHelper, formInputHelper} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {dateToday} from \"../../../helpers/dateHelper/dateToday\";\r\n\r\nconst SetDateEarthImage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const validationSchema = yup.object().shape({\r\n        selectedDate: yup\r\n            .string()\r\n            .required(`Date required`)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    selectedDate: ``\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values) => {\r\n                    dispatch(setEarthImageDate(values.selectedDate))\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({values, touched, errors, handleSubmit, handleBlur, handleChange, isValid, dirty}) => (\r\n                    <form className={cn(s.form, m.form)}>\r\n                        <h3 className={s.title}>Set exact date</h3>\r\n                        <div className={s.inputsHolder}>\r\n                            {formInputHelper(s.formSubtitle, `Date`, touched.selectedDate, errors.selectedDate,\r\n                                s.input, `date`, `selectedDate`, `2015-06-13`, dateToday, handleChange,\r\n                                handleBlur, values.selectedDate)}\r\n                        </div>\r\n\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n                    </form>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetDateEarthImage","export const earthImageUrlHelper = (date, item) => {\r\n    const apiKey = `ZWGiTATMzPHjpsUJSj289aerwaSsLpikIiYBhaek`\r\n    const dateArray = date.split(`-`)\r\n    const splitedDate = {\r\n        year: dateArray[0],\r\n        month: dateArray[1],\r\n        date: dateArray[2],\r\n    }\r\n    return `https://api.nasa.gov/EPIC/archive/natural/${splitedDate.year}/${splitedDate.month}/${splitedDate.date}/png/${item}.png?api_key=${apiKey}`\r\n}","import React, {useEffect} from \"react\";\r\nimport s from './earthImage.module.css'\r\nimport m from './earthImageMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getEarthImage} from \"../../reducers/earthImage\";\r\nimport Preloader from \"../../helpers/preloaders/preloader\";\r\nimport SetDateEarthImage from \"./datePicker/setDateEarthImage\";\r\nimport {earthImageUrlHelper} from \"../../helpers/urlHelper/earthImageURLHelper\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst EarthImage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const earthImage = useSelector(state => state.earthImage.earthImage)\r\n    const SelectedDate = useSelector(state => state.earthImage.date)\r\n    const searchStart = useSelector(state => state.library.searchStart)\r\n\r\n    useEffect(() => {\r\n        dispatch(getEarthImage(SelectedDate))\r\n    }, [dispatch, SelectedDate])\r\n\r\n\r\n\r\n    if(!earthImage) return <Preloader />\r\n\r\n    if(searchStart) return <Redirect to='/nasaLibrary'/>\r\n\r\n    return (\r\n        <div className={s.earthImage}>\r\n            <h2 className={cn(s.title, m.title)}>See photos of Earth from space</h2>\r\n            <SetDateEarthImage />\r\n            <div className={s.imagesArray}>\r\n                    {\r\n                        earthImage.map(e => <div key={e.identifier} className={cn(s.imagesItem, m.imagesItem)}>\r\n                            <div>\r\n                                <h3 className={s.imageDate}>Date: {e.date}</h3>\r\n                                <p className={s.params}>Latitude: {e.centroid_coordinates.lat}</p>\r\n                                <p className={s.params}>Longitude: {e.centroid_coordinates.lon}</p>\r\n                            </div>\r\n                            <div className={s.imageHolder}>\r\n                                <img className={s.image} src={earthImageUrlHelper(SelectedDate, e.image)}\r\n                                     alt=\"Not available, please change date\"/>\r\n                            </div>\r\n                        </div>)\r\n                    }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EarthImage"],"sourceRoot":""}