{"version":3,"sources":["components/NASAlibrary/nasaLibrary.module.css","components/NASAlibrary/nasaLibraryMedia.module.css","components/NASAlibrary/nasaLibrary.jsx"],"names":["module","exports","NasaLibrary","dispatch","useDispatch","isFetching","useSelector","state","library","result","currentSearch","mediaType","yearStart","yearEnd","page","totalPages","useEffect","getSearchResult","setSearchStart","className","s","nasaLibrary","cn","title","m","imagesArray","map","r","imageHolder","image","src","links","href","alt","indexOf","buttonsHolder","pageButton","onClick","prevPage","nextPage"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,YAAc,iCAAiC,YAAc,iCAAiC,YAAc,iCAAiC,MAAQ,2BAA2B,cAAgB,mCAAmC,WAAa,kC,oBCArSD,EAAOC,QAAU,CAAC,MAAQ,kC,iCCD1B,8GAgEeC,UAtDK,WAEhB,IAAMC,EAAWC,cACXC,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQH,cAChDI,EAASH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,UAC5CC,EAAgBJ,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQE,iBACnDC,EAAYL,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQG,aAC/CC,EAAYN,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQI,aAC/CC,EAAUP,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQK,WAC7CC,EAAOR,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQM,QAC1CC,EAAaT,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQO,cAUtD,OARAC,qBAAU,WACNb,EAASc,YAAgBP,EAAeC,EAAWC,EAAWC,EAASC,MACzE,CAACX,EAAUO,EAAeC,EAAWC,EAAWC,EAASC,IAE3DE,qBAAU,WACNb,EAASe,aAAe,MAC1B,CAACf,IAECM,EAGA,sBAAKU,UAAWC,IAAEC,YAAlB,UACI,oBAAIF,UAAWG,IAAGF,IAAEG,MAAOC,IAAED,OAA7B,0CAEClB,GAAc,cAAC,IAAD,KACbA,GACF,qBAAKc,UAAWC,IAAEK,YAAlB,SAEYhB,EAAOiB,KAAI,SAAAC,GAAC,OAAI,qBAAKR,UAAWC,IAAEQ,YAAlB,SACZ,qBAAKT,UAAWC,IAAES,MAAOC,IAAKH,EAAEI,MAAM,GAAGC,KAAMC,IAAI,mBADHxB,EAAOyB,QAAQP,SAM/E,sBAAKR,UAAWC,IAAEe,cAAlB,UAEQrB,EAAO,GACP,cAAC,IAAD,CAAkBK,UAAWC,IAAEgB,WACfC,QAAU,WAAOlC,EAASmC,kBAG1CxB,IAASC,GACT,cAAC,IAAD,CAAgBI,UAAWC,IAAEgB,WACjBC,QAAU,WAAOlC,EAASoC,wBAzBnC,cAAC,IAAD","file":"static/js/10.5413aa72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"nasaLibrary_title__I9cYy\",\"nasaLibrary\":\"nasaLibrary_nasaLibrary__3-mxF\",\"imagesArray\":\"nasaLibrary_imagesArray__1rRDU\",\"imageHolder\":\"nasaLibrary_imageHolder__2U6sN\",\"image\":\"nasaLibrary_image__hl1L1\",\"buttonsHolder\":\"nasaLibrary_buttonsHolder__2ojL_\",\"pageButton\":\"nasaLibrary_pageButton__12oEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"nasaLibraryMedia_title__3eoBn\"};","import React, {useEffect} from \"react\";\r\nimport s from './nasaLibrary.module.css'\r\nimport m from './nasaLibraryMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSearchResult, nextPage, prevPage, setSearchStart} from \"../../reducers/nasaLibrary\";\r\nimport Preloader from \"../../helpers/preloaders/preloader\";\r\nimport { MdNavigateBefore } from 'react-icons/md';\r\nimport { MdNavigateNext } from 'react-icons/md';\r\n\r\nconst NasaLibrary = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isFetching = useSelector(state => state.library.isFetching)\r\n    const result = useSelector(state => state.library.result)\r\n    const currentSearch = useSelector(state => state.library.currentSearch)\r\n    const mediaType = useSelector(state => state.library.mediaType)\r\n    const yearStart = useSelector(state => state.library.yearStart)\r\n    const yearEnd = useSelector(state => state.library.yearEnd)\r\n    const page = useSelector(state => state.library.page)\r\n    const totalPages = useSelector(state => state.library.totalPages)\r\n\r\n    useEffect(()=>{\r\n        dispatch(getSearchResult(currentSearch, mediaType, yearStart, yearEnd, page))\r\n    },[dispatch, currentSearch, mediaType, yearStart, yearEnd, page])\r\n\r\n    useEffect(()=>{\r\n        dispatch(setSearchStart(false))\r\n    },[dispatch])\r\n\r\n    if(!result) return <Preloader />\r\n\r\n    return (\r\n        <div className={s.nasaLibrary}>\r\n            <h2 className={cn(s.title, m.title)}>NASA photo and Video library</h2>\r\n\r\n            {isFetching && <Preloader />}\r\n            {!isFetching &&\r\n            <div className={s.imagesArray}>\r\n                    {\r\n                        result.map(r => <div className={s.imageHolder} key={result.indexOf(r)}>\r\n                            <img className={s.image} src={r.links[0].href} alt=\"Not available\"/>\r\n                        </div>)\r\n                    }\r\n            </div>\r\n            }\r\n            <div className={s.buttonsHolder}>\r\n                {\r\n                    page > 1 &&\r\n                    <MdNavigateBefore className={s.pageButton}\r\n                                    onClick={ () => {dispatch(prevPage())} }/>\r\n                }\r\n                {\r\n                    page !== totalPages &&\r\n                    <MdNavigateNext className={s.pageButton}\r\n                                onClick={ () => {dispatch(nextPage())} }/>\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NasaLibrary"],"sourceRoot":""}