{"version":3,"sources":["helpers/formHelpers/formsStylesMedia.module.css","helpers/formHelpers/formHelpers.jsx","components/earth/earth.module.css","components/earth/earthMedia.module.css","components/earth/parametersPicker/parametersPicker.jsx","components/earth/earth.jsx","helpers/formHelpers/formsStyles.module.css"],"names":["module","exports","formInputHelper","titleClass","title","touched","errors","inputClass","type","name","max","handleChange","handleBlur","value","className","s","inputHolder","onChange","onBlur","formButtonHelper","buttonClass","isValid","dirty","handleSubmit","text","disabled","onClick","ParametersPicker","dispatch","useDispatch","validationSchema","yup","shape","longitude","required","typeError","min","latitude","date","dimensions","initialValues","validateOnBlur","onSubmit","values","resetForm","setParameters","cn","form","m","inputsHolder","formSubtitle","input","dateToday","formButton","Earth","earthObs","useSelector","state","earth","earthObservation","searchStart","library","useEffect","getEarthObservation","to","result","earthParams","id","imageHolder","image","src","url","alt"],"mappings":"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","file":"static/js/7.89b99f17.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formsStylesMedia_form__1C2i4\"};","import React from \"react\";\r\nimport s from './formsStyles.module.css'\r\nimport { RiErrorWarningFill } from 'react-icons/ri'\r\n\r\nexport const formInputHelper = (titleClass, title, touched, errors,\r\n                            inputClass, type, name, max, handleChange, handleBlur, value) => {\r\n    return (\r\n        <div className={s.inputHolder}>\r\n            <p className={titleClass}>{title}</p>\r\n            <input className={inputClass}\r\n                   type={type}\r\n                   name={name}\r\n                   max={max}\r\n                   onChange={handleChange}\r\n                   onBlur={handleBlur}\r\n                   value={value}/>\r\n            {touched && errors &&\r\n            <div className={s.errors}><RiErrorWarningFill/>   {errors}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const formButtonHelper = (buttonClass, isValid, dirty, handleSubmit, text) => {\r\n    return (\r\n        <button className={buttonClass} disabled={!isValid && !dirty}\r\n                onClick={handleSubmit}>{text}</button>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"earth\":\"earth_earth__2IORm\",\"title\":\"earth_title__1sjnz\",\"imageHolder\":\"earth_imageHolder__1YNbq\",\"image\":\"earth_image__4gZKd\",\"earthParams\":\"earth_earthParams__IGou-\",\"result\":\"earth_result__9tE27\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"earthMedia_result__Omp4Q\",\"title\":\"earthMedia_title__1DSpf\"};","import React from \"react\";\r\nimport s from '../../../helpers/formHelpers/formsStyles.module.css'\r\nimport m from '../../../helpers/formHelpers/formsStylesMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setParameters} from \"../../../reducers/earth\";\r\nimport {\r\n    formButtonHelper,\r\n    formInputHelper\r\n} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {dateToday} from \"../../../helpers/dateToday\";\r\n\r\nconst ParametersPicker = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        longitude: yup\r\n            .number()\r\n            .required(`Longitude required`)\r\n            .typeError(`Only numbers`)\r\n            .min(-180, `Enter longitude from -180 to 180`)\r\n            .max(180, `Enter longitude from -180 to 180`),\r\n        latitude: yup\r\n            .number()\r\n            .required(`Latitude required`)\r\n            .typeError(`Only numbers`)\r\n            .min(-90, `Enter latitude from -90 to 90`)\r\n            .max(90, `Enter latitude from -90 to 90`),\r\n        date: yup\r\n            .string()\r\n            .required(`Date required`),\r\n        dimensions: yup\r\n            .number()\r\n            .required(`Dimensions required`)\r\n            .typeError(`Only numbers`)\r\n            .min(0, `Enter float number from 0 to 1`)\r\n            .max(1, `Enter float number from 0 to 1`),\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    longitude: ``,\r\n                    latitude: ``,\r\n                    date: ``,\r\n                    dimensions: ``\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values, {resetForm}) => {\r\n                    dispatch(setParameters(values.longitude, values.latitude ,values.date ,values.dimensions))\r\n                    resetForm({values: ``})\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({values, errors, touched, handleSubmit, handleChange, handleBlur, isValid, dirty}) => (\r\n                    <form className={cn(s.form, m.form)}>\r\n                        <h3 className={s.title}>Set new parameters</h3>\r\n                        <div className={s.inputsHolder}>\r\n                            {formInputHelper(s.formSubtitle, `Longitude`, touched.longitude,\r\n                                errors.longitude, s.input, `text`, `longitude`, null, handleChange,\r\n                                handleBlur, values.longitude)}\r\n\r\n                            {formInputHelper(s.formSubtitle, `Latitude`, touched.latitude,\r\n                                errors.latitude, s.input, `text`, `latitude`, null, handleChange,\r\n                                handleBlur, values.latitude)}\r\n\r\n                            {formInputHelper(s.formSubtitle, `Date`, touched.date,\r\n                                errors.date, s.input, `date`, `date`, dateToday, handleChange,\r\n                                handleBlur, values.date)}\r\n\r\n                            {formInputHelper(s.formSubtitle, `Dimensions`, touched.dimensions,\r\n                                errors.dimensions, s.input, `text`, `dimensions`, null, handleChange,\r\n                                handleBlur, values.dimensions)}\r\n                        </div>\r\n\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n                    </form>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default ParametersPicker","import React, {useEffect} from \"react\";\r\nimport s from './earth.module.css'\r\nimport m from './earthMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getEarthObservation} from \"../../reducers/earth\";\r\nimport Preloader from \"../../helpers/preloaders/preloader\";\r\nimport ParametersPicker from \"./parametersPicker/parametersPicker\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Earth = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const earthObs = useSelector(state => state.earth.earthObservation)\r\n    const longitude = useSelector(state => state.earth.longitude)\r\n    const latitude = useSelector(state => state.earth.latitude)\r\n    const date = useSelector(state => state.earth.date)\r\n    const dimensions = useSelector(state => state.earth.dimensions)\r\n    const searchStart = useSelector(state => state.library.searchStart)\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch(getEarthObservation(longitude, latitude, date, dimensions))\r\n    },[dispatch, longitude, latitude, date, dimensions])\r\n\r\n    if(!earthObs) return <Preloader />\r\n\r\n\r\n    if(searchStart) return <Redirect to='/nasaLibrary'/>\r\n\r\n    return (\r\n        <div className={s.earth}>\r\n            <h2 className={cn(s.title, m.title)}>See a photo of Earth surface from Earth Polychromatic Imaging Camera</h2>\r\n            <ParametersPicker />\r\n            <div className={cn(s.result, m.result)}>\r\n                <p className={s.earthParams}>ID: {earthObs.id}</p>\r\n                <p className={s.earthParams}>Date: {earthObs.date}</p>\r\n                <div className={s.imageHolder}>\r\n                    <img className={s.image} src={earthObs.url} alt=\"earthObs\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Earth","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formsStyles_form__a3D6p\",\"title\":\"formsStyles_title__1npgT\",\"inputsHolder\":\"formsStyles_inputsHolder__2tk_V\",\"formSubtitle\":\"formsStyles_formSubtitle__pN0DK\",\"inputHolder\":\"formsStyles_inputHolder__ysFJ4\",\"input\":\"formsStyles_input__mVJsO\",\"inputSelect\":\"formsStyles_inputSelect__22e0K\",\"option\":\"formsStyles_option__2DYS0\",\"formButton\":\"formsStyles_formButton__3VKpT\",\"errors\":\"formsStyles_errors__1TgNf\",\"errorResponse\":\"formsStyles_errorResponse__1x0zL\"};"],"sourceRoot":""}