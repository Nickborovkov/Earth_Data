{"version":3,"sources":["components/marsRover/marsRover.module.css","components/marsRover/parametersPicker/parametersPicker.jsx","components/marsRover/marsRover.jsx"],"names":["module","exports","MarsRoverParams","dispatch","useDispatch","validationSchema","yup","shape","date","required","initialValues","rover","validateOnBlur","onSubmit","values","resetForm","setMarsRoverParams","touched","errors","handleChange","handleBlur","handleSubmit","isValid","dirty","as","name","value","type","onChange","onBlur","disabled","onClick","MarsRover","marsRoverPhotos","useSelector","state","marsRover","page","searchStart","library","useEffect","getMarsRoverPhotos","length","to","className","s","title","items","map","r","item","params","camera","full_name","earth_date","imageHolder","image","src","img_src","alt","id","buttonsHolder","pageButton","roverPrevPage","roverNextPage"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,MAAQ,yBAAyB,KAAO,wBAAwB,OAAS,0BAA0B,YAAc,+BAA+B,MAAQ,yBAAyB,cAAgB,iCAAiC,WAAa,gC,oHC2D5TC,EAtDS,WAEpB,IAAMC,EAAUC,cACVC,EAAmBC,MAAaC,MAAM,CACxCC,KAAMF,MAAaG,SAAb,4BAGV,OACI,8BACI,cAAC,IAAD,CACIC,cAAe,CACXC,MAAM,GACNH,KAAK,IAETI,gBAAc,EACdC,SAAW,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UACjBZ,EAASa,YAAmBF,EAAOH,MAAOG,EAAON,OACjDO,EAAU,CAACD,OAAO,MAEtBT,iBAAkBA,EAVtB,SAYM,gBAAES,EAAF,EAAEA,OAAQG,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,aAAcC,EAAzC,EAAyCA,WAAYC,EAArD,EAAqDA,aAAcC,EAAnE,EAAmEA,QAASC,EAA5E,EAA4EA,MAA5E,OACE,gCACI,yDACA,gCACKN,EAAQN,OAASO,EAAOP,OACzB,8BAAMO,EAAOP,QACb,eAAC,IAAD,CAAOa,GAAG,SACHC,KAAK,QADZ,UAEI,wBAAQC,MAAM,GAAd,0BACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,YAAd,6BAGR,gCACKT,EAAQT,MAAQU,EAAOV,MACxB,8BAAMU,EAAOV,OACb,uBAAOmB,KAAK,OACLF,KAAK,OACLC,MAAOZ,EAAON,KACdoB,SAAUT,EACVU,OAAQT,OAEnB,wBAAQU,UAAWR,IAAYC,EACvBI,KAAK,SACLI,QAASV,EAFjB,2B,gBCWTW,UAnDG,WAEd,IAAM7B,EAAWC,cACX6B,EAAkBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,mBACvDtB,EAAQuB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUzB,SAC7CH,EAAO0B,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAU5B,QAC5C6B,EAAOH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,QAC5CC,EAAcJ,aAAY,SAAAC,GAAK,OAAIA,EAAMI,QAAQD,eAMvD,OAJAE,qBAAU,WACNrC,EAASsC,YAAmB9B,EAAOH,EAAM6B,MAC3C,CAAClC,EAAUQ,EAAOH,EAAM6B,IAEI,IAA3BJ,EAAgBS,OAAqB,cAAC,IAAD,IAErCJ,EAAoB,cAAC,IAAD,CAAUK,GAAG,iBAGhC,sBAAKC,UAAWC,IAAET,UAAlB,UACG,oBAAIQ,UAAWC,IAAEC,MAAjB,oGACC,cAAC,EAAD,IACA,qBAAKF,UAAWC,IAAEE,MAAlB,SAEQd,EAAgBe,KAAI,SAAAC,GAAC,OAAI,sBAAKL,UAAWC,IAAEK,KAAlB,UACrB,oBAAGN,UAAWC,IAAEM,OAAhB,0BAAsCF,EAAEG,OAAOC,aAC/C,oBAAGT,UAAWC,IAAEM,OAAhB,yBAAqCF,EAAEK,cACvC,qBAAKV,UAAWC,IAAEU,YAAlB,SACI,qBAAKX,UAAWC,IAAEW,MAAOC,IAAKR,EAAES,QAASC,IAAI,mBAJCV,EAAEW,SAUhE,sBAAKhB,UAAWC,IAAEgB,cAAlB,UAEQxB,EAAO,GACP,wBAAQO,UAAWC,IAAEiB,WACb/B,QAAU,WAAO5B,EAAS4D,gBADlC,SAEI,cAAC,IAAD,MAIR,wBAAQnB,UAAWC,IAAEiB,WACb/B,QAAU,WAAO5B,EAAS6D,gBADlC,SAEI,cAAC,IAAD","file":"static/js/9.bccf4cc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"marsRover\":\"marsRover_marsRover__3poAW\",\"title\":\"marsRover_title__3JjbE\",\"items\":\"marsRover_items__2Dtec\",\"item\":\"marsRover_item__1U97C\",\"params\":\"marsRover_params__3oJoY\",\"imageHolder\":\"marsRover_imageHolder__2z7jw\",\"image\":\"marsRover_image__253It\",\"buttonsHolder\":\"marsRover_buttonsHolder__mCNjv\",\"pageButton\":\"marsRover_pageButton__10I6U\"};","import React from \"react\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Field, Formik} from \"formik\";\r\nimport {setMarsRoverParams} from \"../../../reducers/marsRover\";\r\n\r\nconst MarsRoverParams = () => {\r\n\r\n    const dispatch= useDispatch()\r\n    const validationSchema = yup.object().shape({\r\n        date: yup.string().required(`This field is required`),\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    rover: ``,\r\n                    date: ``\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values, {resetForm}) => {\r\n                    dispatch(setMarsRoverParams(values.rover, values.date))\r\n                    resetForm({values: ``})\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({values, touched, errors, handleChange, handleBlur, handleSubmit, isValid, dirty}) => (\r\n                    <div>\r\n                        <h3>Choose rover parameters</h3>\r\n                        <div>\r\n                            {touched.rover && errors.rover &&\r\n                            <div>{errors.rover}</div>}\r\n                            <Field as='select'\r\n                                   name='rover'>\r\n                                <option value=\"\">Choose rover</option>\r\n                                <option value=\"spirit\">Spirit</option>\r\n                                <option value=\"opportunity\">Opportunity</option>\r\n                                <option value=\"curiosity\">Curiosity</option>\r\n                            </Field>\r\n                        </div>\r\n                        <div>\r\n                            {touched.date && errors.date &&\r\n                            <div>{errors.date}</div>}\r\n                            <input type=\"date\"\r\n                                   name='date'\r\n                                   value={values.date}\r\n                                   onChange={handleChange}\r\n                                   onBlur={handleBlur}/>\r\n                        </div>\r\n                        <button disabled={!isValid && !dirty}\r\n                                type='submit'\r\n                                onClick={handleSubmit}>Show</button>\r\n                    </div>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarsRoverParams","import React, {useEffect} from \"react\";\r\nimport s from './marsRover.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getMarsRoverPhotos, roverNextPage, roverPrevPage} from \"../../reducers/marsRover\";\r\nimport Preloader from \"../../helpers/preloader\";\r\nimport MarsRoverParams from \"./parametersPicker/parametersPicker\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { MdNavigateBefore } from 'react-icons/md';\r\nimport { MdNavigateNext } from 'react-icons/md';\r\n\r\nconst MarsRover = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const marsRoverPhotos = useSelector(state => state.marsRover.marsRoverPhotos)\r\n    const rover = useSelector(state => state.marsRover.rover)\r\n    const date = useSelector(state => state.marsRover.date)\r\n    const page = useSelector(state => state.marsRover.page)\r\n    const searchStart = useSelector(state => state.library.searchStart)\r\n\r\n    useEffect(()=>{\r\n        dispatch(getMarsRoverPhotos(rover, date, page))\r\n    },[dispatch, rover, date, page])\r\n\r\n    if(marsRoverPhotos.length === 0) return <Preloader />\r\n\r\n    if(searchStart) return <Redirect to='/nasaLibrary'/>\r\n\r\n    return (\r\n        <div className={s.marsRover}>\r\n           <h1 className={s.title}>Photos collection gathered by NASA's Curiosity, Opportunity, and Spirit rovers on Mars</h1>\r\n            <MarsRoverParams />\r\n            <div className={s.items}>\r\n                {\r\n                    marsRoverPhotos.map(r => <div className={s.item} key={r.id}>\r\n                        <p className={s.params}>Camera name: {r.camera.full_name}</p>\r\n                        <p className={s.params}>Earth date: {r.earth_date}</p>\r\n                        <div className={s.imageHolder}>\r\n                            <img className={s.image} src={r.img_src} alt=\"roverPhoto\"/>\r\n                        </div>\r\n\r\n                    </div>)\r\n                }\r\n            </div>\r\n            <div className={s.buttonsHolder}>\r\n                {\r\n                    page > 1 &&\r\n                    <button className={s.pageButton}\r\n                            onClick={ () => {dispatch(roverPrevPage())} }>\r\n                        <MdNavigateBefore/>\r\n                    </button>\r\n                }\r\n\r\n                <button className={s.pageButton}\r\n                        onClick={ () => {dispatch(roverNextPage())} }>\r\n                    <MdNavigateNext />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarsRover"],"sourceRoot":""}