{"version":3,"sources":["helpers/formHelpers/formsStylesMedia.module.css","helpers/commonStyles/commonStyles.module.css","images/imagePlaceholder.jpg","helpers/modalWindow/modalWindow.jsx","helpers/modalWindow/modalWindow.module.css","components/earthObs/earthObs.module.css","components/earthObs/earthObsMedia.module.css","components/earthObs/paramsPickerEarthOBS/paramsPickerEarthObs.jsx","components/earthObs/earthObs.jsx"],"names":["module","exports","ModalWindow","active","setActive","children","className","cn","s","modalBody","activeBody","onClick","modalContent","e","stopPropagation","ParamsPickerEarthObs","dispatch","useDispatch","error","useSelector","state","errors","validationSchema","yup","shape","longitude","required","typeError","min","max","latitude","initialValues","validateOnBlur","onSubmit","values","setParameters","date","dimensions","setNewError","touched","handleSubmit","handleChange","handleBlur","isValid","dirty","form","m","title","inputsHolder","formInputHelper","formSubtitle","input","formButtonHelper","formButton","errorCase","EarthObs","earthObs","earth","earthObservation","searchStart","library","useState","modalWindow","setModalWindow","modalSrc","setModalSrc","useEffect","getEarthObservation","to","result","earthParams","id","imageHolder","image","src","url","alt","currentTarget","onError","target","imagePlaceHolder","common","modalImage"],"mappings":"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","file":"static/js/7.c03edb02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formsStylesMedia_form__1C2i4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalImage\":\"commonStyles_modalImage__2f9nz\",\"video\":\"commonStyles_video__NSDi7\"};","export default __webpack_public_path__ + \"static/media/imagePlaceholder.d121e487.jpg\";","import React from \"react\";\r\nimport s from \"./modalWindow.module.css\"\r\nimport cn from 'classnames'\r\n\r\nconst ModalWindow = ({active, setActive, children}) => {\r\n    return (\r\n        <div className={cn(s.modalBody, active && s.activeBody)}\r\n             onClick={ () => { setActive(false) } }>\r\n            <div className={s.modalContent}\r\n                 onClick={ (e) => {e.stopPropagation()} }>\r\n                {children}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalWindow","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBody\":\"modalWindow_modalBody__37t9c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"earth\":\"earthObs_earth__3uESM\",\"title\":\"earthObs_title__3_Hst\",\"imageHolder\":\"earthObs_imageHolder__1AOXR\",\"image\":\"earthObs_image__2iaZb\",\"earthParams\":\"earthObs_earthParams__XzJ_r\",\"result\":\"earthObs_result__2swlr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"earthObsMedia_result__2QPYn\",\"title\":\"earthObsMedia_title__BvizZ\"};","import React from \"react\";\r\nimport s from '../../../helpers/formHelpers/formsStyles.module.css'\r\nimport m from '../../../helpers/formHelpers/formsStylesMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setParameters} from \"../../../reducers/earthObs\";\r\nimport {\r\n    formButtonHelper,\r\n    formInputHelper\r\n} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {setNewError} from \"../../../reducers/errors\";\r\n\r\nconst ParamsPickerEarthObs = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const error = useSelector(state => state.errors.error)\r\n\r\n    const validationSchema = yup.object().shape({\r\n        longitude: yup\r\n            .number()\r\n            .required(`Longitude required`)\r\n            .typeError(`Only numbers`)\r\n            .min(-180, `Enter longitude from -180 to 180`)\r\n            .max(180, `Enter longitude from -180 to 180`),\r\n        latitude: yup\r\n            .number()\r\n            .required(`Latitude required`)\r\n            .typeError(`Only numbers`)\r\n            .min(-90, `Enter latitude from -90 to 90`)\r\n            .max(90, `Enter latitude from -90 to 90`),\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    longitude: ``,\r\n                    latitude: ``,\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values) => {\r\n                    dispatch(setParameters(values.longitude, values.latitude ,values.date ,values.dimensions))\r\n                    dispatch(setNewError(null))\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({values, errors, touched, handleSubmit, handleChange, handleBlur, isValid, dirty}) => (\r\n                    <form className={cn(s.form, m.form)}>\r\n                        <h3 className={s.title}>Set new parameters</h3>\r\n                        <div className={s.inputsHolder}>\r\n                            {formInputHelper(s.formSubtitle, `Longitude`, touched.longitude,\r\n                                errors.longitude, s.input, `text`, `longitude`, null, null, handleChange,\r\n                                handleBlur, values.longitude, `numeric`)}\r\n\r\n                            {formInputHelper(s.formSubtitle, `Latitude`, touched.latitude,\r\n                                errors.latitude, s.input, `text`, `latitude`, null, null, handleChange,\r\n                                handleBlur, values.latitude, `numeric`)}\r\n\r\n                        </div>\r\n\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n                        {error && <h3 className={s.errorCase}>Not available, please change parameters</h3>}\r\n                    </form>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default ParamsPickerEarthObs","import React, {useEffect, useState} from \"react\";\r\nimport s from './earthObs.module.css'\r\nimport m from './earthObsMedia.module.css'\r\nimport common from '../../helpers/commonStyles/commonStyles.module.css'\r\nimport cn from 'classnames'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getEarthObservation} from \"../../reducers/earthObs\";\r\nimport Preloader from \"../../helpers/preloaders/preloader\";\r\nimport ParamsPickerEarthObs from \"./paramsPickerEarthOBS/paramsPickerEarthObs\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {setNewError} from \"../../reducers/errors\";\r\nimport imagePlaceHolder from \"../../images/imagePlaceholder.jpg\";\r\nimport ModalWindow from \"../../helpers/modalWindow/modalWindow\";\r\n\r\nconst EarthObs = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const earthObs = useSelector(state => state.earth.earthObservation)\r\n    const longitude = useSelector(state => state.earth.longitude)\r\n    const latitude = useSelector(state => state.earth.latitude)\r\n    const searchStart = useSelector(state => state.library.searchStart)\r\n    const error = useSelector(state => state.errors.error)\r\n\r\n    const [modalWindow, setModalWindow] = useState(false)\r\n    const [modalSrc, setModalSrc] = useState(``)\r\n\r\n    useEffect(()=>{\r\n        dispatch(getEarthObservation(longitude, latitude))\r\n    },[dispatch, longitude, latitude])\r\n\r\n    useEffect(()=>{\r\n       dispatch(setNewError(null))\r\n    },[dispatch])\r\n\r\n\r\n    if(searchStart) return <Redirect to='/nasaLibrary'/>\r\n\r\n    return (\r\n        <div className={s.earth}>\r\n            <h2 className={cn(s.title, m.title)}>NASA Landsat Satellite Imagery Data</h2>\r\n            <ParamsPickerEarthObs />\r\n\r\n\r\n            {!earthObs && !error &&\r\n            <Preloader/>}\r\n\r\n            {earthObs && !error &&\r\n            <div className={cn(s.result, m.result)}>\r\n                <p className={s.earthParams}>ID: {earthObs.id}</p>\r\n                <p className={s.earthParams}>Date: {earthObs.date}</p>\r\n                <div className={s.imageHolder}>\r\n                    <img className={s.image}\r\n                         src={earthObs.url}\r\n                         alt=\"earthObs\"\r\n                         onClick={ (e) => {\r\n                             setModalWindow(true)\r\n                             setModalSrc(e.currentTarget.src)\r\n                         }}\r\n                         onError={ (e) => {e.target.src = imagePlaceHolder}}/>\r\n                </div>\r\n            </div>\r\n            }\r\n\r\n            {modalWindow &&\r\n            <ModalWindow active={modalWindow} setActive={setModalWindow}>\r\n                <img className={cn(common.modalImage)}\r\n                     src={modalSrc}\r\n                     alt=\"modal\"/>\r\n            </ModalWindow>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EarthObs"],"sourceRoot":""}