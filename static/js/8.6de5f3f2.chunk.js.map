{"version":3,"sources":["helpers/commonStyles/commonStyles.module.css","helpers/formHelpers/formsStylesMedia.module.css","helpers/modalWindow/modalWindow.jsx","helpers/modalWindow/modalWindow.module.css","helpers/Pagination/pagination.jsx","helpers/Pagination/pagination.module.css","components/marsRover/marsRover.module.css","components/marsRover/marsRoverMedia.module.css","components/marsRover/paramsPickerROVER/paramsPickerROVER.jsx","components/marsRover/marsRoverItem/marsRoverItem.jsx","components/marsRover/marsRover.jsx"],"names":["module","exports","ModalWindow","memo","active","setActive","children","className","cn","s","modalBody","activeBody","onClick","modalContent","e","stopPropagation","Pagination","page","prevPageCondition","prevPageDispatch","nextPageCondition","nextPageDispatch","dispatch","useDispatch","buttonsHolder","pageButton","ParamsPickerROVER","setParams","useState","rover","setRover","spirit","opportunity","curiosity","activeRover","setActiveRover","validationSchema","yup","shape","date","required","initialValues","validateOnBlur","onSubmit","values","setMarsRoverParams","setNewError","touched","errors","handleChange","handleBlur","handleSubmit","isValid","dirty","form","m","title","typesHolder","typeButton","activeType","type","inputsHolder","inputHolder","formInputHelper","formSubtitle","input","dateToday","formButtonHelper","formButton","MarsRoverItem","item","modalWindow","setModalWindow","modalSrc","setModalSrc","height","params","name","status","camera","full_name","earth_date","imageHolder","image","src","imagePreloader","alt","currentTarget","onLoad","target","img_src","common","modalImage","MarsRover","marsRoverPhotos","useSelector","state","marsRover","searchStart","library","isFetching","error","setParameters","useEffect","getMarsRoverPhotos","window","scrollTo","to","formOpenButton","errorCase","items","map","r","id","roverPrevPage","roverNextPage"],"mappings":"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","file":"static/js/8.6de5f3f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"commonStyles_title__1Do2M\",\"modalImage\":\"commonStyles_modalImage__2f9nz\",\"video\":\"commonStyles_video__NSDi7\",\"errorCase\":\"commonStyles_errorCase__jOkXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formsStylesMedia_form__1C2i4\"};","import React, {memo} from \"react\";\r\nimport s from \"./modalWindow.module.css\"\r\nimport cn from 'classnames'\r\n\r\nconst ModalWindow = memo(({active, setActive, children}) => {\r\n    return (\r\n        <div className={cn(s.modalBody, active && s.activeBody)}\r\n             onClick={ () => { setActive(false) } }>\r\n            <div className={s.modalContent}\r\n                 onClick={ (e) => {e.stopPropagation()} }>\r\n                {children}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ModalWindow","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBody\":\"modalWindow_modalBody__37t9c\"};","import s from \"./pagination.module.css\";\r\nimport {MdNavigateBefore, MdNavigateNext} from \"react-icons/md\";\r\nimport React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst Pagination = ({page, prevPageCondition, prevPageDispatch,\r\n                        nextPageCondition, nextPageDispatch}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={s.buttonsHolder}>\r\n            {page > prevPageCondition &&\r\n            <MdNavigateBefore className={s.pageButton}\r\n                              onClick={ () => {dispatch(prevPageDispatch())} }/>}\r\n\r\n            {page !== nextPageCondition &&\r\n            <MdNavigateNext className={s.pageButton}\r\n                            onClick={ () => {dispatch(nextPageDispatch())} }/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Pagination","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsHolder\":\"pagination_buttonsHolder__3PzUn\",\"pageButton\":\"pagination_pageButton__1MCYV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"marsRover\":\"marsRover_marsRover__1_FxY\",\"items\":\"marsRover_items__2tLya\",\"item\":\"marsRover_item__3ZyOe\",\"params\":\"marsRover_params__YXy2l\",\"imageHolder\":\"marsRover_imageHolder__IT3XV\",\"image\":\"marsRover_image__2btIh\",\"buttonsHolder\":\"marsRover_buttonsHolder__52cZZ\",\"pageButton\":\"marsRover_pageButton__1Nb7y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"marsRoverMedia_item__pHsAs\"};","import React, {memo, useState} from \"react\";\r\nimport s from '../../../helpers/formHelpers/formsStyles.module.css'\r\nimport m from \"../../../helpers/formHelpers/formsStylesMedia.module.css\";\r\nimport cn from \"classnames\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Formik} from \"formik\";\r\nimport {setMarsRoverParams} from \"../../../reducers/marsRover\";\r\nimport {formButtonHelper, formInputHelper} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {dateToday} from \"../../../helpers/dateHelper/dateToday\";\r\nimport {setNewError} from \"../../../reducers/common\";\r\n\r\nconst ParamsPickerROVER = memo(({setParams}) => {\r\n\r\n    const dispatch= useDispatch()\r\n\r\n    //Choosing rover\r\n    const [rover, setRover] = useState(`spirit`)\r\n\r\n    //Active rover from applying styles\r\n    const [activeRover, setActiveRover] = useState({\r\n        spirit: true,\r\n        opportunity: false,\r\n        curiosity: false,\r\n    })\r\n\r\n    const validationSchema = yup.object().shape({\r\n        date: yup\r\n            .string()\r\n            .required(`Date required`),\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    date: ``\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values) => {\r\n                    if(rover === `spirit`){\r\n                        dispatch(setMarsRoverParams(`spirit`, values.date))\r\n                    }else if(rover === `opportunity`){\r\n                        dispatch(setMarsRoverParams(`opportunity`, values.date))\r\n                    }else if(rover === `curiosity`){\r\n                        dispatch(setMarsRoverParams(`curiosity`, values.date))\r\n                    }\r\n                    //Reset error after submit\r\n                    dispatch(setNewError(null))\r\n                    //Close params after submit\r\n                    setParams(false)\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({values, touched, errors, handleChange, handleBlur,\r\n                       handleSubmit, isValid, dirty}) => (\r\n                    <form className={cn(s.form, m.form)}>\r\n\r\n                        <h3 className={s.title}>Set rover and date parameters</h3>\r\n\r\n                        <div className={s.typesHolder}>\r\n                            <button className={cn(s.typeButton, activeRover.spirit && s.activeType)}\r\n                                    type='button'\r\n                                    onClick={ () => {\r\n                                        setRover(`spirit`)\r\n                                        setActiveRover({\r\n                                            spirit: true,\r\n                                            opportunity: false,\r\n                                            curiosity: false,})\r\n                                    } }>Spirit</button>\r\n                            <button className={cn(s.typeButton, activeRover.opportunity && s.activeType)}\r\n                                    type='button'\r\n                                    onClick={ () => {\r\n                                        setRover(`opportunity`)\r\n                                        setActiveRover({\r\n                                            spirit: false,\r\n                                            opportunity: true,\r\n                                            curiosity: false,})\r\n                                    } }>Opportunity</button>\r\n                            <button className={cn(s.typeButton, activeRover.curiosity && s.activeType)}\r\n                                    type='button'\r\n                                    onClick={ () => {\r\n                                        setRover(`curiosity`)\r\n                                        setActiveRover({\r\n                                            spirit: false,\r\n                                            opportunity: false,\r\n                                            curiosity: true,})\r\n                                    } }>Curiosity</button>\r\n                        </div>\r\n\r\n\r\n                        <div className={s.inputsHolder}>\r\n\r\n\r\n                            <div className={s.inputHolder}>\r\n\r\n                                {rover === `spirit` && <div>\r\n                                    {formInputHelper(s.formSubtitle, `Date for Spirit`, touched.date,\r\n                                        errors.date, s.input, `date`, `date`, `2004-01-05`,\r\n                                        `2010-03-14`, handleChange, handleBlur, values.date, ``, true)}\r\n                                </div>}\r\n                                {rover === `opportunity` && <div>\r\n                                    {formInputHelper(s.formSubtitle, `Date for Opportunity`,\r\n                                        touched.date, errors.date, s.input, `date`, `date`,\r\n                                        `2004-01-26`, dateToday, handleChange, handleBlur,\r\n                                        values.date, ``, true)}\r\n                                </div>}\r\n                                {rover === `curiosity` && <div>\r\n                                    {formInputHelper(s.formSubtitle, `Date for Curiosity`,\r\n                                        touched.date, errors.date, s.input, `date`, `date`,\r\n                                        `2012-08-06`, dateToday, handleChange, handleBlur,\r\n                                        values.date, ``, true)}\r\n                                </div>}\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n                    </form>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ParamsPickerROVER","import React, {memo, useState} from \"react\";\r\nimport s from \"../marsRover.module.css\";\r\nimport m from \"../marsRoverMedia.module.css\";\r\nimport common from \"../../../helpers/commonStyles/commonStyles.module.css\";\r\nimport cn from \"classnames\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport imagePreloader from \"../../../helpers/preloaders/imageLoader.gif\"\r\nimport ModalWindow from \"../../../helpers/modalWindow/modalWindow\";\r\n\r\nconst MarsRoverItem = memo(({item}) => {\r\n\r\n    //State for modal window\r\n    const [modalWindow, setModalWindow] = useState(false)\r\n    const [modalSrc, setModalSrc] = useState(``)\r\n\r\n    return (\r\n        <div>\r\n            {/*Item*/}\r\n            <div className={cn(s.item, m.item)}>\r\n                <LazyLoad height={300}>\r\n                    <div>\r\n                        <p className={s.params}>Rover: {item.rover.name}</p>\r\n                        <p className={s.params}>Status: {item.rover.status}</p>\r\n                        <p className={s.params}>Camera name: {item.camera.full_name}</p>\r\n                        <p className={s.params}>Earth date: {item.earth_date}</p>\r\n                        <div className={s.imageHolder}>\r\n                            <img className={s.image}\r\n                                 src={imagePreloader}\r\n                                 alt=\"roverPhoto\"\r\n                                 onClick={(e) => {\r\n                                     setModalWindow(true)\r\n                                     setModalSrc(e.currentTarget.src)\r\n                                 }}\r\n                                 onLoad={(e) => {\r\n                                     e.target.src = item.img_src\r\n                                 }}/>\r\n                        </div>\r\n                    </div>\r\n                </LazyLoad>\r\n            </div>\r\n\r\n            {/*Modal window*/}\r\n            {modalWindow &&\r\n            <ModalWindow active={modalWindow} setActive={setModalWindow}>\r\n                <img className={cn(common.modalImage)}\r\n                     src={modalSrc}\r\n                     alt=\"modal\"/>\r\n            </ModalWindow>}\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MarsRoverItem","import React, {useEffect, useState} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './marsRover.module.css'\r\nimport common from '../../helpers/commonStyles/commonStyles.module.css'\r\nimport form from '../../helpers/formHelpers/formsStyles.module.css'\r\nimport Preloader from \"../../helpers/preloaders/preloader\";\r\nimport ParamsPickerROVER from \"./paramsPickerROVER/paramsPickerROVER\";\r\nimport MarsRoverItem from \"./marsRoverItem/marsRoverItem\";\r\nimport Pagination from \"../../helpers/Pagination/pagination\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getMarsRoverPhotos, roverNextPage, roverPrevPage} from \"../../reducers/marsRover\";\r\nimport {setNewError} from \"../../reducers/common\";\r\nimport { GiClick } from 'react-icons/gi';\r\n\r\nconst MarsRover = () => {\r\n\r\n    //State\r\n    const dispatch = useDispatch()\r\n\r\n    const marsRoverPhotos = useSelector(state => state.marsRover.marsRoverPhotos)\r\n    const rover = useSelector(state => state.marsRover.rover)\r\n    const date = useSelector(state => state.marsRover.date)\r\n    const page = useSelector(state => state.marsRover.page)\r\n    const searchStart = useSelector(state => state.library.searchStart)\r\n    const isFetching = useSelector(state => state.common.isFetching)\r\n    const error = useSelector(state => state.common.error)\r\n\r\n    //Open/close parameters\r\n    const [params, setParams] = useState(false)\r\n    const setParameters = () => {\r\n        params\r\n            ? setParams(false)\r\n            : setParams(true)\r\n    }\r\n\r\n    //Setting items\r\n    useEffect(()=>{\r\n        dispatch(getMarsRoverPhotos(rover, date, page))\r\n        window.scrollTo(0, 0)\r\n    },[dispatch, rover, date, page])\r\n\r\n    //SearchStart = null when page loads (with this is's possible to go to other links)\r\n    useEffect(()=>{\r\n        dispatch(setNewError(null))\r\n    },[dispatch])\r\n\r\n    //Redirect to nasaLibrary when submit search field if header\r\n    if(searchStart) return <Redirect to='/nasaLibrary'/>\r\n\r\n    return (\r\n        <div className={s.marsRover}>\r\n           <h1 className={common.title}>Image Data Gathered By NASA's Rovers On Mars</h1>\r\n\r\n            {/*Parameters section*/}\r\n            {!params &&\r\n            <button className={form.formOpenButton} onClick={setParameters}><GiClick/> Set parameters</button>}\r\n\r\n            {params && <div>\r\n                <button className={form.formOpenButton} onClick={setParameters}><GiClick/> Close parameters</button>\r\n                <ParamsPickerROVER setParams={setParams}/>\r\n            </div>}\r\n\r\n            {/*Error case*/}\r\n            {error && <h3 className={common.errorCase}>Not available, please change date</h3>}\r\n\r\n            {/*Preloader*/}\r\n            {isFetching && !error &&\r\n            <Preloader/>}\r\n\r\n            {/*Result*/}\r\n            {!isFetching && !error &&\r\n            <div>\r\n                <div className={s.items}>\r\n                    {marsRoverPhotos.map(r => <MarsRoverItem key={r.id}\r\n                                                                item={r}/>)}\r\n                </div>\r\n\r\n                {/*Pagination*/}\r\n                <Pagination page = {page}\r\n                            prevPageCondition = {'1'}\r\n                            prevPageDispatch={roverPrevPage}\r\n                            nextPageCondition = {``}\r\n                            nextPageDispatch={roverNextPage}/>\r\n\r\n\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarsRover"],"sourceRoot":""}