{"version":3,"sources":["helpers/formHelpers/formsStylesMedia.module.css","components/apod/apod.module.css","components/apod/apodMedia.module.css","components/apod/datePickers/setDateAPOD.jsx","components/apod/datePickers/setIntervalAPOD.jsx","components/apod/apod.jsx"],"names":["module","exports","SetDateAPOD","dispatch","useDispatch","validationSchema","yup","shape","currentDate","required","initialValues","validateOnBlur","onSubmit","values","setCurrentDate","errors","touched","handleChange","handleBlur","handleSubmit","isValid","dirty","className","cn","s","form","m","title","inputsHolder","formInputHelper","formSubtitle","input","dateToday","formButtonHelper","formButton","SetIntervalAPOD","startDate","endDate","setIntervalDates","Apod","apodArray","useSelector","state","apod","intervalDateStart","intervalDateEnd","searchStart","library","useState","datePickerType","setDatePickerType","useEffect","getApod","getApodWithInterval","length","to","apodForm","apodButton","onClick","apodList","map","a","apodItem","apodTitle","apodImageHolder","apodImage","src","url","alt","apodDate","date","apodExpTitle","apodExplanation","explanation"],"mappings":"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","file":"static/js/4.38f2eef6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formsStylesMedia_form__2kri3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"apod\":\"apod_apod__Kk6Qy\",\"apodItem\":\"apod_apodItem__Bn6qY\",\"title\":\"apod_title__1BVpa\",\"apodList\":\"apod_apodList__Axpv1\",\"apodTitle\":\"apod_apodTitle__2Re3D\",\"apodImageHolder\":\"apod_apodImageHolder__2XMSh\",\"apodImage\":\"apod_apodImage__12l_6\",\"apodDate\":\"apod_apodDate__3EsWF\",\"apodExpTitle\":\"apod_apodExpTitle__2ybTk\",\"apodExplanation\":\"apod_apodExplanation__3wxwX\",\"apodForm\":\"apod_apodForm__3lOQQ\",\"apodButton\":\"apod_apodButton__3GbKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"apodItem\":\"apodMedia_apodItem__2W46D\",\"title\":\"apodMedia_title__11yfX\",\"apodTitle\":\"apodMedia_apodTitle__G3dTC\",\"apodDate\":\"apodMedia_apodDate__3mCAn\",\"apodExpTitle\":\"apodMedia_apodExpTitle__2FGOk\",\"apodExplanation\":\"apodMedia_apodExplanation__30Gn_\"};","import React from \"react\";\r\nimport s from '../../../helpers/formHelpers/formsStyles.module.css'\r\nimport m from '../../../helpers/formHelpers/formsStylesMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCurrentDate} from \"../../../reducers/apod\";\r\nimport {formButtonHelper, formInputHelper} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {dateToday} from \"../../../helpers/dateHelper/dateToday\";\r\n\r\nconst SetDateAPOD = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        currentDate: yup\r\n            .string()\r\n            .required(`Date required`)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    currentDate: ``\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values) => {\r\n                    dispatch(setCurrentDate(values.currentDate))\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, handleSubmit, isValid, dirty})=>(\r\n                    <form className={cn(s.form, m.form)}>\r\n                        <h3 className={s.title}>Set exact date</h3>\r\n                        <div className={s.inputsHolder}>\r\n                            {formInputHelper(s.formSubtitle, `Date`, touched.currentDate,\r\n                                errors.currentDate, s.input, `date`, `currentDate`, `1995-01-07`, dateToday, handleChange,\r\n                                handleBlur, values.currentDate)}\r\n                        </div>\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetDateAPOD","import React from \"react\";\r\nimport s from \"../../../helpers/formHelpers/formsStyles.module.css\";\r\nimport m from \"../../../helpers/formHelpers/formsStylesMedia.module.css\";\r\nimport cn from 'classnames'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setIntervalDates} from \"../../../reducers/apod\";\r\nimport {formButtonHelper, formInputHelper} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {dateToday} from \"../../../helpers/dateHelper/dateToday\";\r\n\r\n\r\nconst SetIntervalAPOD = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        startDate: yup\r\n            .string()\r\n            .required(`Start date required`),\r\n        endDate: yup\r\n            .string()\r\n            .required(`End date required`),\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    startDate: ``,\r\n                    endDate: ``,\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values) => {\r\n                    dispatch(setIntervalDates(values.startDate, values.endDate))\r\n                }}\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({values, errors, touched, handleSubmit, handleBlur, handleChange, isValid, dirty}) => (\r\n                    <form className={cn(s.form, m.form)}>\r\n                        <h3 className={s.title}>Set time interval</h3>\r\n                        <div className={s.inputsHolder}>\r\n\r\n                            {formInputHelper(s.formSubtitle, `Start date`, touched.startDate,\r\n                                errors.startDate, s.input, `date`, `startDate`, `1995-01-07`, dateToday, handleChange,\r\n                                handleBlur, values.startDate)}\r\n\r\n                            {formInputHelper(s.formSubtitle, `End date`, touched.endDate,\r\n                                errors.endDate, s.input, `date`, `endDate`, `1995-01-07`, dateToday, handleChange,\r\n                                handleBlur, values.endDate)}\r\n\r\n                        </div>\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n\r\n                    </form>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetIntervalAPOD","import React, {useEffect, useState} from \"react\";\r\nimport s from './apod.module.css'\r\nimport m from './apodMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getApod, getApodWithInterval} from \"../../reducers/apod\";\r\nimport Preloader from \"../../helpers/preloaders/preloader\";\r\nimport SetDateAPOD from \"./datePickers/setDateAPOD\";\r\nimport SetIntervalAPOD from \"./datePickers/setIntervalAPOD\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Apod = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const apodArray = useSelector(state => state.apod.apodArray)\r\n    const currentDate = useSelector(state => state.apod.currentDate)\r\n    const intervalDateStart = useSelector(state => state.apod.intervalDateStart)\r\n    const intervalDateEnd = useSelector(state => state.apod.intervalDateEnd)\r\n    const searchStart = useSelector(state => state.library.searchStart)\r\n\r\n    const [datePickerType, setDatePickerType] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        if(datePickerType === 0){\r\n            dispatch(getApod(currentDate))\r\n        }\r\n    },[dispatch, datePickerType, currentDate])\r\n\r\n    useEffect(()=>{\r\n        if(datePickerType === 1){\r\n            dispatch(getApodWithInterval(intervalDateStart,intervalDateEnd))\r\n        }\r\n    },[dispatch, datePickerType, intervalDateStart, intervalDateEnd])\r\n\r\n\r\n\r\n    if(apodArray.length === 0) return <Preloader />\r\n\r\n    if(searchStart) return <Redirect to='/nasaLibrary'/>\r\n\r\n    return (\r\n        <div className={s.apod}>\r\n           <h2 className={cn(s.title, m.title)}>See NASA picture of the day</h2>\r\n            {datePickerType === 0 &&\r\n            <div className={s.apodForm}>\r\n                <SetDateAPOD />\r\n                <button className={s.apodButton} onClick={ () => {setDatePickerType(1)} }>Choose interval</button>\r\n            </div>}\r\n\r\n            {datePickerType === 1 &&\r\n            <div className={s.apodForm}>\r\n                <SetIntervalAPOD />\r\n                <button className={s.apodButton}\r\n                        onClick={ () => {setDatePickerType(0)} }>Choose exact date</button>\r\n            </div>}\r\n\r\n                    <div className={s.apodList}>\r\n                {\r\n                    apodArray.map(a => <div className={cn(s.apodItem, m.apodItem)} key={a.date}>\r\n                        <h3 className={cn(s.apodTitle, m.apodTitle)}>{a.title}</h3>\r\n                        <div className={s.apodImageHolder}>\r\n                            <img className={s.apodImage} src={a.url} alt=\"Not available\"/>\r\n                        </div>\r\n                        <p className={cn(s.apodDate, m.apodDate)}>Date: {a.date}</p>\r\n                        <p className={cn(s.apodExpTitle, m.apodExpTitle)}>Explanation</p>\r\n                        <p className={cn(s.apodExplanation, m.apodExplanation)}>{a.explanation}</p>\r\n                    </div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Apod"],"sourceRoot":""}