{"version":3,"sources":["components/earth/earth.module.css","components/earth/parametersPicker/parametersPicker.jsx","components/earth/earth.jsx","helpers/formHelpers/formsStyles.module.css","helpers/formHelpers/formHelpers.jsx"],"names":["module","exports","ParametersPicker","dispatch","useDispatch","validationSchema","yup","shape","longitude","required","typeError","min","max","latitude","date","dimensions","initialValues","validateOnBlur","onSubmit","values","resetForm","setParameters","errors","touched","handleSubmit","handleChange","handleBlur","isValid","dirty","className","s","form","title","inputsHolder","formInputHelper","formSubtitle","input","dateToday","formButtonHelper","formButton","Earth","earthObs","useSelector","state","earth","earthObservation","searchStart","library","useEffect","getEarthObservation","to","result","earthParams","id","imageHolder","image","src","url","alt","titleClass","inputClass","type","name","value","inputHolder","onChange","onBlur","buttonClass","text","disabled","onClick"],"mappings":"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","file":"static/js/7.dea2938d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"earth\":\"earth_earth__3AnjM\",\"title\":\"earth_title__fif8X\",\"imageHolder\":\"earth_imageHolder__hHB_k\",\"image\":\"earth_image__6NT6y\",\"earthParams\":\"earth_earthParams__2B1LW\",\"result\":\"earth_result__2mQ7m\"};","import React from \"react\";\r\nimport s from '../../../helpers/formHelpers/formsStyles.module.css'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setParameters} from \"../../../reducers/earth\";\r\nimport {\r\n    formButtonHelper,\r\n    formInputHelper\r\n} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {dateToday} from \"../../../helpers/dateToday\";\r\n\r\nconst ParametersPicker = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        longitude: yup\r\n            .number()\r\n            .required(`Longitude required`)\r\n            .typeError(`Only numbers`)\r\n            .min(-180, `Enter longitude from -180 to 180`)\r\n            .max(180, `Enter longitude from -180 to 180`),\r\n        latitude: yup\r\n            .number()\r\n            .required(`Latitude required`)\r\n            .typeError(`Only numbers`)\r\n            .min(-90, `Enter latitude from -90 to 90`)\r\n            .max(90, `Enter latitude from -90 to 90`),\r\n        date: yup\r\n            .string()\r\n            .required(`Date required`),\r\n        dimensions: yup\r\n            .number()\r\n            .required(`Dimensions required`)\r\n            .typeError(`Only numbers`)\r\n            .min(0, `Enter float number from 0 to 1`)\r\n            .max(1, `Enter float number from 0 to 1`),\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    longitude: ``,\r\n                    latitude: ``,\r\n                    date: ``,\r\n                    dimensions: ``\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values, {resetForm}) => {\r\n                    dispatch(setParameters(values.longitude, values.latitude ,values.date ,values.dimensions))\r\n                    resetForm({values: ``})\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({values, errors, touched, handleSubmit, handleChange, handleBlur, isValid, dirty}) => (\r\n                    <form className={s.form}>\r\n                        <h3 className={s.title}>Set new parameters</h3>\r\n                        <div className={s.inputsHolder}>\r\n                            {formInputHelper(s.formSubtitle, `Longitude`, touched.longitude,\r\n                                errors.longitude, s.input, `text`, `longitude`, null, handleChange,\r\n                                handleBlur, values.longitude)}\r\n\r\n                            {formInputHelper(s.formSubtitle, `Latitude`, touched.latitude,\r\n                                errors.latitude, s.input, `text`, `latitude`, null, handleChange,\r\n                                handleBlur, values.latitude)}\r\n\r\n                            {formInputHelper(s.formSubtitle, `Date`, touched.date,\r\n                                errors.date, s.input, `date`, `date`, dateToday, handleChange,\r\n                                handleBlur, values.date)}\r\n\r\n                            {formInputHelper(s.formSubtitle, `Dimensions`, touched.dimensions,\r\n                                errors.dimensions, s.input, `text`, `dimensions`, null, handleChange,\r\n                                handleBlur, values.dimensions)}\r\n                        </div>\r\n\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n                    </form>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default ParametersPicker","import React, {useEffect} from \"react\";\r\nimport s from './earth.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getEarthObservation} from \"../../reducers/earth\";\r\nimport Preloader from \"../../helpers/preloaders/preloader\";\r\nimport ParametersPicker from \"./parametersPicker/parametersPicker\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Earth = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const earthObs = useSelector(state => state.earth.earthObservation)\r\n    const longitude = useSelector(state => state.earth.longitude)\r\n    const latitude = useSelector(state => state.earth.latitude)\r\n    const date = useSelector(state => state.earth.date)\r\n    const dimensions = useSelector(state => state.earth.dimensions)\r\n    const searchStart = useSelector(state => state.library.searchStart)\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch(getEarthObservation(longitude, latitude, date, dimensions))\r\n    },[dispatch, longitude, latitude, date, dimensions])\r\n\r\n    if(!earthObs) return <Preloader />\r\n\r\n\r\n    if(searchStart) return <Redirect to='/nasaLibrary'/>\r\n\r\n    return (\r\n        <div className={s.earth}>\r\n            <h2 className={s.title}>Earth Observation Data</h2>\r\n            <ParametersPicker />\r\n            <div className={s.result}>\r\n                <p className={s.earthParams}>ID: {earthObs.id}</p>\r\n                <p className={s.earthParams}>Date: {earthObs.date}</p>\r\n                <div className={s.imageHolder}>\r\n                    <img className={s.image} src={earthObs.url} alt=\"earthObs\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Earth","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formsStyles_form__1hMsK\",\"title\":\"formsStyles_title__e7A-b\",\"inputsHolder\":\"formsStyles_inputsHolder__hCEcN\",\"formSubtitle\":\"formsStyles_formSubtitle__3vhyu\",\"inputHolder\":\"formsStyles_inputHolder__1JPnn\",\"input\":\"formsStyles_input__2PRtO\",\"inputSelect\":\"formsStyles_inputSelect__t1QWX\",\"option\":\"formsStyles_option__ac7AJ\",\"formButton\":\"formsStyles_formButton__2ENNh\",\"errors\":\"formsStyles_errors__3RGRv\"};","import React from \"react\";\r\nimport s from './formsStyles.module.css'\r\nimport { RiErrorWarningFill } from 'react-icons/ri'\r\n\r\nexport const formInputHelper = (titleClass, title, touched, errors,\r\n                            inputClass, type, name, max, handleChange, handleBlur, value) => {\r\n    return (\r\n        <div className={s.inputHolder}>\r\n            <p className={titleClass}>{title}</p>\r\n            <input className={inputClass}\r\n                   type={type}\r\n                   name={name}\r\n                   max={max}\r\n                   onChange={handleChange}\r\n                   onBlur={handleBlur}\r\n                   value={value}/>\r\n            {touched && errors &&\r\n            <div className={s.errors}><RiErrorWarningFill/>   {errors}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const formButtonHelper = (buttonClass, isValid, dirty, handleSubmit, text) => {\r\n    return (\r\n        <button className={buttonClass} disabled={!isValid && !dirty}\r\n                onClick={handleSubmit}>{text}</button>\r\n    )\r\n}"],"sourceRoot":""}