{"version":3,"sources":["helpers/formHelpers/formsStylesMedia.module.css","helpers/formHelpers/formHelpers.jsx","components/apod/apod.module.css","components/apod/apodMedia.module.css","components/apod/datePickers/setDateAPOD.jsx","components/apod/datePickers/setIntervalAPOD.jsx","components/apod/apod.jsx","helpers/formHelpers/formsStyles.module.css"],"names":["module","exports","formInputHelper","titleClass","title","touched","errors","inputClass","type","name","min","max","handleChange","handleBlur","value","className","s","inputHolder","onChange","onBlur","formButtonHelper","buttonClass","isValid","dirty","handleSubmit","text","disabled","onClick","SetDateAPOD","dispatch","useDispatch","validationSchema","yup","shape","currentDate","required","initialValues","validateOnBlur","onSubmit","values","setCurrentDate","cn","form","m","inputsHolder","formSubtitle","input","dateToday","formButton","SetIntervalAPOD","startDate","endDate","setIntervalDates","Apod","apodArray","useSelector","state","apod","intervalDateStart","intervalDateEnd","searchStart","library","useState","datePickerType","setDatePickerType","useEffect","getApod","getApodWithInterval","length","to","apodForm","apodButton","apodList","map","a","apodItem","apodTitle","apodImageHolder","apodImage","src","url","alt","apodDate","date","apodExpTitle","apodExplanation","explanation"],"mappings":"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","file":"static/js/5.9a7856f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formsStylesMedia_form__2kri3\"};","import React from \"react\";\r\nimport s from './formsStyles.module.css'\r\nimport { RiErrorWarningFill } from 'react-icons/ri'\r\n\r\nexport const formInputHelper = (titleClass, title, touched, errors,\r\n                            inputClass, type, name, min, max, handleChange, handleBlur, value) => {\r\n    return (\r\n        <div className={s.inputHolder}>\r\n            <p className={titleClass}>{title}</p>\r\n            <input className={inputClass}\r\n                   type={type}\r\n                   name={name}\r\n                   min={min}\r\n                   max={max}\r\n                   onChange={handleChange}\r\n                   onBlur={handleBlur}\r\n                   value={value}/>\r\n            {touched && errors &&\r\n            <div className={s.errors}><RiErrorWarningFill/>   {errors}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const formButtonHelper = (buttonClass, isValid, dirty, handleSubmit, text) => {\r\n    return (\r\n        <button className={buttonClass}\r\n                disabled={!isValid && !dirty}\r\n                onClick={handleSubmit}\r\n                type='submit'>{text}</button>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"apod\":\"apod_apod__Kk6Qy\",\"apodItem\":\"apod_apodItem__Bn6qY\",\"title\":\"apod_title__1BVpa\",\"apodList\":\"apod_apodList__Axpv1\",\"apodTitle\":\"apod_apodTitle__2Re3D\",\"apodImageHolder\":\"apod_apodImageHolder__2XMSh\",\"apodImage\":\"apod_apodImage__12l_6\",\"apodDate\":\"apod_apodDate__3EsWF\",\"apodExpTitle\":\"apod_apodExpTitle__2ybTk\",\"apodExplanation\":\"apod_apodExplanation__3wxwX\",\"apodForm\":\"apod_apodForm__3lOQQ\",\"apodButton\":\"apod_apodButton__3GbKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"apodItem\":\"apodMedia_apodItem__2W46D\",\"title\":\"apodMedia_title__11yfX\",\"apodTitle\":\"apodMedia_apodTitle__G3dTC\",\"apodDate\":\"apodMedia_apodDate__3mCAn\",\"apodExpTitle\":\"apodMedia_apodExpTitle__2FGOk\",\"apodExplanation\":\"apodMedia_apodExplanation__30Gn_\"};","import React from \"react\";\r\nimport s from '../../../helpers/formHelpers/formsStyles.module.css'\r\nimport m from '../../../helpers/formHelpers/formsStylesMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCurrentDate} from \"../../../reducers/apod\";\r\nimport {formButtonHelper, formInputHelper} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {dateToday} from \"../../../helpers/dateHelper/dateToday\";\r\n\r\nconst SetDateAPOD = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        currentDate: yup\r\n            .string()\r\n            .required(`Date required`)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    currentDate: ``\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values) => {\r\n                    dispatch(setCurrentDate(values.currentDate))\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, handleSubmit, isValid, dirty})=>(\r\n                    <form className={cn(s.form, m.form)}>\r\n                        <h3 className={s.title}>Set exact date</h3>\r\n                        <div className={s.inputsHolder}>\r\n                            {formInputHelper(s.formSubtitle, `Date`, touched.currentDate,\r\n                                errors.currentDate, s.input, `date`, `currentDate`, `1995-01-07`, dateToday, handleChange,\r\n                                handleBlur, values.currentDate)}\r\n                        </div>\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetDateAPOD","import React from \"react\";\r\nimport s from \"../../../helpers/formHelpers/formsStyles.module.css\";\r\nimport m from \"../../../helpers/formHelpers/formsStylesMedia.module.css\";\r\nimport cn from 'classnames'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setIntervalDates} from \"../../../reducers/apod\";\r\nimport {formButtonHelper, formInputHelper} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {dateToday} from \"../../../helpers/dateHelper/dateToday\";\r\n\r\n\r\nconst SetIntervalAPOD = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        startDate: yup\r\n            .string()\r\n            .required(`Start date required`),\r\n        endDate: yup\r\n            .string()\r\n            .required(`End date required`),\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    startDate: ``,\r\n                    endDate: ``,\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values) => {\r\n                    dispatch(setIntervalDates(values.startDate, values.endDate))\r\n                }}\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({values, errors, touched, handleSubmit, handleBlur, handleChange, isValid, dirty}) => (\r\n                    <form className={cn(s.form, m.form)}>\r\n                        <h3 className={s.title}>Set time interval</h3>\r\n                        <div className={s.inputsHolder}>\r\n\r\n                            {formInputHelper(s.formSubtitle, `Start date`, touched.startDate,\r\n                                errors.startDate, s.input, `date`, `startDate`, `1995-01-07`, dateToday, handleChange,\r\n                                handleBlur, values.startDate)}\r\n\r\n                            {formInputHelper(s.formSubtitle, `End date`, touched.endDate,\r\n                                errors.endDate, s.input, `date`, `endDate`, `1995-01-07`, dateToday, handleChange,\r\n                                handleBlur, values.endDate)}\r\n\r\n                        </div>\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n\r\n                    </form>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetIntervalAPOD","import React, {useEffect, useState} from \"react\";\r\nimport s from './apod.module.css'\r\nimport m from './apodMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getApod, getApodWithInterval} from \"../../reducers/apod\";\r\nimport Preloader from \"../../helpers/preloaders/preloader\";\r\nimport SetDateAPOD from \"./datePickers/setDateAPOD\";\r\nimport SetIntervalAPOD from \"./datePickers/setIntervalAPOD\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Apod = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const apodArray = useSelector(state => state.apod.apodArray)\r\n    const currentDate = useSelector(state => state.apod.currentDate)\r\n    const intervalDateStart = useSelector(state => state.apod.intervalDateStart)\r\n    const intervalDateEnd = useSelector(state => state.apod.intervalDateEnd)\r\n    const searchStart = useSelector(state => state.library.searchStart)\r\n\r\n    const [datePickerType, setDatePickerType] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        if(datePickerType === 0){\r\n            dispatch(getApod(currentDate))\r\n        }\r\n    },[dispatch, datePickerType, currentDate])\r\n\r\n    useEffect(()=>{\r\n        if(datePickerType === 1){\r\n            dispatch(getApodWithInterval(intervalDateStart,intervalDateEnd))\r\n        }\r\n    },[dispatch, datePickerType, intervalDateStart, intervalDateEnd])\r\n\r\n\r\n\r\n    if(apodArray.length === 0) return <Preloader />\r\n\r\n    if(searchStart) return <Redirect to='/nasaLibrary'/>\r\n\r\n    return (\r\n        <div className={s.apod}>\r\n           <h2 className={cn(s.title, m.title)}>See NASA picture of the day</h2>\r\n            {datePickerType === 0 &&\r\n            <div className={s.apodForm}>\r\n                <SetDateAPOD />\r\n                <button className={s.apodButton} onClick={ () => {setDatePickerType(1)} }>Choose interval</button>\r\n            </div>}\r\n\r\n            {datePickerType === 1 &&\r\n            <div className={s.apodForm}>\r\n                <SetIntervalAPOD />\r\n                <button className={s.apodButton}\r\n                        onClick={ () => {setDatePickerType(0)} }>Choose exact date</button>\r\n            </div>}\r\n\r\n                    <div className={s.apodList}>\r\n                {\r\n                    apodArray.map(a => <div className={cn(s.apodItem, m.apodItem)} key={a.date}>\r\n                        <h3 className={cn(s.apodTitle, m.apodTitle)}>{a.title}</h3>\r\n                        <div className={s.apodImageHolder}>\r\n                            <img className={s.apodImage} src={a.url} alt=\"Not available\"/>\r\n                        </div>\r\n                        <p className={cn(s.apodDate, m.apodDate)}>Date: {a.date}</p>\r\n                        <p className={cn(s.apodExpTitle, m.apodExpTitle)}>Explanation</p>\r\n                        <p className={cn(s.apodExplanation, m.apodExplanation)}>{a.explanation}</p>\r\n                    </div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Apod","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formsStyles_form__1TKap\",\"title\":\"formsStyles_title__3lknP\",\"inputsHolder\":\"formsStyles_inputsHolder__QnF96\",\"formSubtitle\":\"formsStyles_formSubtitle__3_K-R\",\"inputHolder\":\"formsStyles_inputHolder__1bDL1\",\"input\":\"formsStyles_input__18Y-Q\",\"inputSelect\":\"formsStyles_inputSelect__3Q__w\",\"option\":\"formsStyles_option__AJiia\",\"formButton\":\"formsStyles_formButton__1UDKP\",\"errors\":\"formsStyles_errors__1_hs2\",\"errorResponse\":\"formsStyles_errorResponse__33D3K\",\"intervalHint\":\"formsStyles_intervalHint__1lUBS\"};"],"sourceRoot":""}