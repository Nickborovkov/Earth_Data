{"version":3,"sources":["components/apod/apod.module.css","../node_modules/classnames/index.js","components/apod/datePickers/setDateAPOD.jsx","components/apod/datePickers/setIntervalAPOD.jsx","components/apod/apod.jsx","helpers/formHelpers/formsStyles.module.css","helpers/formHelpers/formHelpers.jsx"],"names":["module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","default","SetDateAPOD","dispatch","useDispatch","validationSchema","yup","shape","currentDate","required","initialValues","validateOnBlur","onSubmit","values","resetForm","setCurrentDate","errors","touched","handleChange","handleBlur","handleSubmit","isValid","dirty","className","s","form","title","inputsHolder","formInputHelper","formSubtitle","input","dateToday","formButtonHelper","formButton","SetIntervalAPOD","startDate","endDate","setIntervalDates","Apod","apodArray","useSelector","state","apod","intervalDateStart","intervalDateEnd","searchStart","library","useState","datePickerType","setDatePickerType","useEffect","getApod","getApodWithInterval","to","apodForm","apodButton","onClick","map","a","apodItem","apodTitle","apodImageHolder","apodImage","src","url","alt","apodDate","date","apodExpTitle","apodExplanation","explanation","titleClass","inputClass","type","name","max","value","inputHolder","onChange","onBlur","buttonClass","text","disabled"],"mappings":"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","file":"static/js/5.89f8d402.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"apod\":\"apod_apod__2D6zs\",\"apodItem\":\"apod_apodItem__3U9OO\",\"title\":\"apod_title__3sych\",\"image\":\"apod_image__ul0_9\",\"apodTitle\":\"apod_apodTitle__khJU5\",\"apodImageHolder\":\"apod_apodImageHolder__19fT0\",\"apodImage\":\"apod_apodImage__GvoiZ\",\"apodDate\":\"apod_apodDate__1wuyb\",\"apodExpTitle\":\"apod_apodExpTitle__33S3J\",\"apodExplanation\":\"apod_apodExplanation__3rRz2\",\"apodForm\":\"apod_apodForm__DuJ7i\",\"apodButton\":\"apod_apodButton__OFeKv\"};","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\r\nimport s from '../../../helpers/formHelpers/formsStyles.module.css'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCurrentDate} from \"../../../reducers/apod\";\r\nimport {formButtonHelper, formInputHelper} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {dateToday} from \"../../../helpers/dateToday\";\r\n\r\nconst SetDateAPOD = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        currentDate: yup\r\n            .string()\r\n            .required(`Date required`)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    currentDate: ``\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values, {resetForm}) => {\r\n                    dispatch(setCurrentDate(values.currentDate))\r\n                    resetForm({values: ``})\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, handleSubmit, isValid, dirty})=>(\r\n                    <form className={s.form}>\r\n                        <h3 className={s.title}>Set exact date</h3>\r\n                        <div className={s.inputsHolder}>\r\n                            {formInputHelper(s.formSubtitle, `Date`, touched.currentDate,\r\n                                errors.currentDate, s.input, `date`, `currentDate`, dateToday, handleChange,\r\n                                handleBlur, values.currentDate)}\r\n                        </div>\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetDateAPOD","import React from \"react\";\r\nimport s from \"../../../helpers/formHelpers/formsStyles.module.css\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setIntervalDates} from \"../../../reducers/apod\";\r\nimport {formButtonHelper, formInputHelper} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {dateToday} from \"../../../helpers/dateToday\";\r\n\r\n\r\nconst SetIntervalAPOD = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        startDate: yup\r\n            .string()\r\n            .required(`Start date required`),\r\n        endDate: yup\r\n            .string()\r\n            .required(`End date required`),\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    startDate: ``,\r\n                    endDate: ``,\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values, {resetForm}) => {\r\n                    dispatch(setIntervalDates(values.startDate, values.endDate))\r\n                    resetForm({values: ``})\r\n                }}\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({values, errors, touched, handleSubmit, handleBlur, handleChange, isValid, dirty}) => (\r\n                    <form className={s.form}>\r\n                        <h3 className={s.title}>Set time interval</h3>\r\n                        <div className={s.inputsHolder}>\r\n\r\n                            {formInputHelper(s.formSubtitle, `Start date`, touched.startDate,\r\n                                errors.startDate, s.input, `date`, `startDate`, dateToday, handleChange,\r\n                                handleBlur, values.startDate)}\r\n\r\n                            {formInputHelper(s.formSubtitle, `End date`, touched.endDate,\r\n                                errors.endDate, s.input, `date`, `endDate`, dateToday, handleChange,\r\n                                handleBlur, values.endDate)}\r\n\r\n                        </div>\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n\r\n                    </form>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetIntervalAPOD","import React, {useEffect, useState} from \"react\";\r\nimport s from './apod.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getApod, getApodWithInterval} from \"../../reducers/apod\";\r\nimport Preloader from \"../../helpers/preloaders/preloader\";\r\nimport SetDateAPOD from \"./datePickers/setDateAPOD\";\r\nimport SetIntervalAPOD from \"./datePickers/setIntervalAPOD\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport cn from 'classnames'\r\n\r\nconst Apod = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const apodArray = useSelector(state => state.apod.apodArray)\r\n    const currentDate = useSelector(state => state.apod.currentDate)\r\n    const intervalDateStart = useSelector(state => state.apod.intervalDateStart)\r\n    const intervalDateEnd = useSelector(state => state.apod.intervalDateEnd)\r\n    const searchStart = useSelector(state => state.library.searchStart)\r\n\r\n    const [datePickerType, setDatePickerType] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        if(datePickerType === 0){\r\n            dispatch(getApod(currentDate))\r\n        }\r\n    },[dispatch, datePickerType, currentDate])\r\n\r\n    useEffect(()=>{\r\n        if(datePickerType === 1){\r\n            dispatch(getApodWithInterval(intervalDateStart,intervalDateEnd))\r\n        }\r\n    },[dispatch, datePickerType, intervalDateStart, intervalDateEnd])\r\n\r\n\r\n\r\n    if(apodArray.length === 0) return <Preloader />\r\n\r\n    if(searchStart) return <Redirect to='/nasaLibrary'/>\r\n\r\n    return (\r\n        <div className={s.apod}>\r\n           <h2 className={s.title}>A picture of the day</h2>\r\n            {datePickerType === 0 &&\r\n            <div className={s.apodForm}>\r\n                <SetDateAPOD />\r\n                <button className={s.apodButton} onClick={ () => {setDatePickerType(1)} }>Choose interval</button>\r\n            </div>}\r\n\r\n            {datePickerType === 1 &&\r\n            <div className={s.apodForm}>\r\n                <SetIntervalAPOD />\r\n                <button className={s.apodButton}\r\n                        onClick={ () => {setDatePickerType(0)} }>Choose exact date</button>\r\n            </div>}\r\n\r\n            <div>\r\n                {\r\n                    apodArray.map(a => <div className={s.apodItem} key={a.date}>\r\n                        <h3 className={s.apodTitle}>{a.title}</h3>\r\n                        <div className={s.apodImageHolder}>\r\n                            <img className={s.apodImage} src={a.url} alt=\"Not available\"/>\r\n                        </div>\r\n                        <p className={s.apodDate}>Date: {a.date}</p>\r\n                        <p className={s.apodExpTitle}>Explanation</p>\r\n                        <p className={s.apodExplanation}>{a.explanation}</p>\r\n                    </div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Apod","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formsStyles_form__1hMsK\",\"title\":\"formsStyles_title__e7A-b\",\"inputsHolder\":\"formsStyles_inputsHolder__hCEcN\",\"formSubtitle\":\"formsStyles_formSubtitle__3vhyu\",\"inputHolder\":\"formsStyles_inputHolder__1JPnn\",\"input\":\"formsStyles_input__2PRtO\",\"inputSelect\":\"formsStyles_inputSelect__t1QWX\",\"option\":\"formsStyles_option__ac7AJ\",\"formButton\":\"formsStyles_formButton__2ENNh\",\"errors\":\"formsStyles_errors__3RGRv\"};","import React from \"react\";\r\nimport s from './formsStyles.module.css'\r\nimport { RiErrorWarningFill } from 'react-icons/ri'\r\n\r\nexport const formInputHelper = (titleClass, title, touched, errors,\r\n                            inputClass, type, name, max, handleChange, handleBlur, value) => {\r\n    return (\r\n        <div className={s.inputHolder}>\r\n            <p className={titleClass}>{title}</p>\r\n            <input className={inputClass}\r\n                   type={type}\r\n                   name={name}\r\n                   max={max}\r\n                   onChange={handleChange}\r\n                   onBlur={handleBlur}\r\n                   value={value}/>\r\n            {touched && errors &&\r\n            <div className={s.errors}><RiErrorWarningFill/>   {errors}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const formButtonHelper = (buttonClass, isValid, dirty, handleSubmit, text) => {\r\n    return (\r\n        <button className={buttonClass} disabled={!isValid && !dirty}\r\n                onClick={handleSubmit}>{text}</button>\r\n    )\r\n}"],"sourceRoot":""}