{"version":3,"sources":["helpers/formHelpers/formsStylesMedia.module.css","helpers/formHelpers/formHelpers.jsx","components/apod/apod.module.css","components/apod/apodMedia.module.css","components/apod/datePickers/setDateAPOD.jsx","components/apod/datePickers/setIntervalAPOD.jsx","components/apod/apod.jsx","helpers/formHelpers/formsStyles.module.css"],"names":["module","exports","formInputHelper","titleClass","title","touched","errors","inputClass","type","name","max","handleChange","handleBlur","value","className","s","inputHolder","onChange","onBlur","formButtonHelper","buttonClass","isValid","dirty","handleSubmit","text","disabled","onClick","SetDateAPOD","dispatch","useDispatch","validationSchema","yup","shape","currentDate","required","initialValues","validateOnBlur","onSubmit","values","resetForm","setCurrentDate","cn","form","m","inputsHolder","formSubtitle","input","dateToday","formButton","SetIntervalAPOD","startDate","endDate","setIntervalDates","Apod","apodArray","useSelector","state","apod","intervalDateStart","intervalDateEnd","searchStart","library","useState","datePickerType","setDatePickerType","useEffect","getApod","getApodWithInterval","length","to","apodForm","apodButton","apodList","map","a","apodItem","apodTitle","apodImageHolder","apodImage","src","url","alt","apodDate","date","apodExpTitle","apodExplanation","explanation"],"mappings":"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","file":"static/js/5.38e5e4fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formsStylesMedia_form__3CeTA\"};","import React from \"react\";\r\nimport s from './formsStyles.module.css'\r\nimport { RiErrorWarningFill } from 'react-icons/ri'\r\n\r\nexport const formInputHelper = (titleClass, title, touched, errors,\r\n                            inputClass, type, name, max, handleChange, handleBlur, value) => {\r\n    return (\r\n        <div className={s.inputHolder}>\r\n            <p className={titleClass}>{title}</p>\r\n            <input className={inputClass}\r\n                   type={type}\r\n                   name={name}\r\n                   max={max}\r\n                   onChange={handleChange}\r\n                   onBlur={handleBlur}\r\n                   value={value}/>\r\n            {touched && errors &&\r\n            <div className={s.errors}><RiErrorWarningFill/>   {errors}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const formButtonHelper = (buttonClass, isValid, dirty, handleSubmit, text) => {\r\n    return (\r\n        <button className={buttonClass} disabled={!isValid && !dirty}\r\n                onClick={handleSubmit}>{text}</button>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"apod\":\"apod_apod__1OKpy\",\"apodItem\":\"apod_apodItem__1ntIb\",\"title\":\"apod_title__1YvME\",\"apodList\":\"apod_apodList__3j3y-\",\"apodTitle\":\"apod_apodTitle__14pMd\",\"apodImageHolder\":\"apod_apodImageHolder__3KoQw\",\"apodImage\":\"apod_apodImage__3mIOQ\",\"apodDate\":\"apod_apodDate__dJe0Q\",\"apodExpTitle\":\"apod_apodExpTitle__2RnRp\",\"apodExplanation\":\"apod_apodExplanation__1_wg8\",\"apodForm\":\"apod_apodForm__29UPa\",\"apodButton\":\"apod_apodButton__Ugu_F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"apodItem\":\"apodMedia_apodItem__2uDQo\",\"title\":\"apodMedia_title__3j-Kh\",\"apodTitle\":\"apodMedia_apodTitle__3zunK\",\"apodDate\":\"apodMedia_apodDate__3w_s3\",\"apodExpTitle\":\"apodMedia_apodExpTitle__2p5O2\",\"apodExplanation\":\"apodMedia_apodExplanation__3a6_G\"};","import React from \"react\";\r\nimport s from '../../../helpers/formHelpers/formsStyles.module.css'\r\nimport m from '../../../helpers/formHelpers/formsStylesMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCurrentDate} from \"../../../reducers/apod\";\r\nimport {formButtonHelper, formInputHelper} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {dateToday} from \"../../../helpers/dateToday\";\r\n\r\nconst SetDateAPOD = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        currentDate: yup\r\n            .string()\r\n            .required(`Date required`)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    currentDate: ``\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values, {resetForm}) => {\r\n                    dispatch(setCurrentDate(values.currentDate))\r\n                    resetForm({values: ``})\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, handleSubmit, isValid, dirty})=>(\r\n                    <form className={cn(s.form, m.form)}>\r\n                        <h3 className={s.title}>Set exact date</h3>\r\n                        <div className={s.inputsHolder}>\r\n                            {formInputHelper(s.formSubtitle, `Date`, touched.currentDate,\r\n                                errors.currentDate, s.input, `date`, `currentDate`, dateToday, handleChange,\r\n                                handleBlur, values.currentDate)}\r\n                        </div>\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetDateAPOD","import React from \"react\";\r\nimport s from \"../../../helpers/formHelpers/formsStyles.module.css\";\r\nimport m from \"../../../helpers/formHelpers/formsStylesMedia.module.css\";\r\nimport cn from 'classnames'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setIntervalDates} from \"../../../reducers/apod\";\r\nimport {formButtonHelper, formInputHelper} from \"../../../helpers/formHelpers/formHelpers\";\r\nimport {dateToday} from \"../../../helpers/dateToday\";\r\n\r\n\r\nconst SetIntervalAPOD = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        startDate: yup\r\n            .string()\r\n            .required(`Start date required`),\r\n        endDate: yup\r\n            .string()\r\n            .required(`End date required`),\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    startDate: ``,\r\n                    endDate: ``,\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={ (values, {resetForm}) => {\r\n                    dispatch(setIntervalDates(values.startDate, values.endDate))\r\n                    resetForm({values: ``})\r\n                }}\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({values, errors, touched, handleSubmit, handleBlur, handleChange, isValid, dirty}) => (\r\n                    <form className={cn(s.form, m.form)}>\r\n                        <h3 className={s.title}>Set time interval</h3>\r\n                        <div className={s.inputsHolder}>\r\n\r\n                            {formInputHelper(s.formSubtitle, `Start date`, touched.startDate,\r\n                                errors.startDate, s.input, `date`, `startDate`, dateToday, handleChange,\r\n                                handleBlur, values.startDate)}\r\n\r\n                            {formInputHelper(s.formSubtitle, `End date`, touched.endDate,\r\n                                errors.endDate, s.input, `date`, `endDate`, dateToday, handleChange,\r\n                                handleBlur, values.endDate)}\r\n\r\n                        </div>\r\n                        {formButtonHelper(s.formButton, isValid, dirty, handleSubmit, `Show`)}\r\n\r\n                    </form>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetIntervalAPOD","import React, {useEffect, useState} from \"react\";\r\nimport s from './apod.module.css'\r\nimport m from './apodMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getApod, getApodWithInterval} from \"../../reducers/apod\";\r\nimport Preloader from \"../../helpers/preloaders/preloader\";\r\nimport SetDateAPOD from \"./datePickers/setDateAPOD\";\r\nimport SetIntervalAPOD from \"./datePickers/setIntervalAPOD\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Apod = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const apodArray = useSelector(state => state.apod.apodArray)\r\n    const currentDate = useSelector(state => state.apod.currentDate)\r\n    const intervalDateStart = useSelector(state => state.apod.intervalDateStart)\r\n    const intervalDateEnd = useSelector(state => state.apod.intervalDateEnd)\r\n    const searchStart = useSelector(state => state.library.searchStart)\r\n\r\n    const [datePickerType, setDatePickerType] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        if(datePickerType === 0){\r\n            dispatch(getApod(currentDate))\r\n        }\r\n    },[dispatch, datePickerType, currentDate])\r\n\r\n    useEffect(()=>{\r\n        if(datePickerType === 1){\r\n            dispatch(getApodWithInterval(intervalDateStart,intervalDateEnd))\r\n        }\r\n    },[dispatch, datePickerType, intervalDateStart, intervalDateEnd])\r\n\r\n\r\n\r\n    if(apodArray.length === 0) return <Preloader />\r\n\r\n    if(searchStart) return <Redirect to='/nasaLibrary'/>\r\n\r\n    return (\r\n        <div className={s.apod}>\r\n           <h2 className={cn(s.title, m.title)}>A picture of the day</h2>\r\n            {datePickerType === 0 &&\r\n            <div className={s.apodForm}>\r\n                <SetDateAPOD />\r\n                <button className={s.apodButton} onClick={ () => {setDatePickerType(1)} }>Choose interval</button>\r\n            </div>}\r\n\r\n            {datePickerType === 1 &&\r\n            <div className={s.apodForm}>\r\n                <SetIntervalAPOD />\r\n                <button className={s.apodButton}\r\n                        onClick={ () => {setDatePickerType(0)} }>Choose exact date</button>\r\n            </div>}\r\n\r\n                    <div className={s.apodList}>\r\n                {\r\n                    apodArray.map(a => <div className={cn(s.apodItem, m.apodItem)} key={a.date}>\r\n                        <h3 className={cn(s.apodTitle, m.apodTitle)}>{a.title}</h3>\r\n                        <div className={s.apodImageHolder}>\r\n                            <img className={s.apodImage} src={a.url} alt=\"Not available\"/>\r\n                        </div>\r\n                        <p className={cn(s.apodDate, m.apodDate)}>Date: {a.date}</p>\r\n                        <p className={cn(s.apodExpTitle, m.apodExpTitle)}>Explanation</p>\r\n                        <p className={cn(s.apodExplanation, m.apodExplanation)}>{a.explanation}</p>\r\n                    </div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Apod","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formsStyles_form__53czP\",\"title\":\"formsStyles_title__1Ysiq\",\"inputsHolder\":\"formsStyles_inputsHolder__28-jZ\",\"formSubtitle\":\"formsStyles_formSubtitle__1GHcF\",\"inputHolder\":\"formsStyles_inputHolder__1OG_F\",\"input\":\"formsStyles_input__3ORBv\",\"inputSelect\":\"formsStyles_inputSelect__2O4hn\",\"option\":\"formsStyles_option__2cinS\",\"formButton\":\"formsStyles_formButton__18x6C\",\"errors\":\"formsStyles_errors__Gvxin\"};"],"sourceRoot":""}